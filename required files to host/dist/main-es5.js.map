{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/addcourse/addcourse.component.ts","webpack:///src/app/addcourse/addcourse.component.html","webpack:///src/app/addquestion/addquestion.component.ts","webpack:///src/app/addquestion/addquestion.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/dash-ad-content/dash-ad-content.component.ts","webpack:///src/app/dash-ad-content/dash-ad-content.component.html","webpack:///src/app/dashboard/dashboard.component.ts","webpack:///src/app/dashboard/dashboard.component.html","webpack:///src/app/dashboardadmin/dashboardadmin.component.ts","webpack:///src/app/dashboardadmin/dashboardadmin.component.html","webpack:///src/app/data.service.ts","webpack:///src/app/exampage/exampage.component.ts","webpack:///src/app/exampage/exampage.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/instructions/instructions.component.ts","webpack:///src/app/instructions/instructions.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/model/form.model.ts","webpack:///src/app/resultstudents/resultstudents.component.ts","webpack:///src/app/resultstudents/resultstudents.component.html","webpack:///src/app/showresult/showresult.component.ts","webpack:///src/app/showresult/showresult.component.html","webpack:///src/app/signup/signup.component.ts","webpack:///src/app/signup/signup.component.html","webpack:///src/app/submitexam/submitexam.component.ts","webpack:///src/app/submitexam/submitexam.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AddcourseComponent","ds","router","addcourse_ob","evnt","banner","target","files","coursedata","FormData","set","category","courseName","AddCourseData","subscribe","data","console","log","received_data","navigate","queryParams","courseinfo","JSON","stringify","alert","get_file","add_course","selector","templateUrl","styleUrls","AddquestionComponent","addques_ob","getcourseforquestion","course_ob","AddQuestion","status","add_question","routes","path","component","children","AppRoutingModule","forRoot","imports","AppComponent","title","google_client_ID","facebook_client_ID","config","PROVIDER_ID","provider","provideConfig","AppModule","provide","useFactory","declarations","providers","bootstrap","DashAdContentComponent","getallcourse","getobj","obj","quizdetails","DashboardComponent","route","queryParamMap","stuinfo_dashboard","parse","get","document","getElementById","style","width","DashboardadminComponent","socialuserinfo","localStorage","getItem","admin_info","DataService","http","stuinfo_obj","post","logininfo_ob","ques_ob","exam_ob","getstudent","getcourse","res_arr","providedIn","ExampageComponent","stu_option","quesarray","result","i","questions_obj","Questions","length","qno","firstques","restform","j","optn","correct","reset","r","resultarray","res","ques","prev","next","HomeComponent","login_page","signup_page","InstructionsComponent","p","coursename","getspecificcourse","specific_course_obj","course_questions","startQuiz","LoginComponent","authserve","user","login_info","stu_login","setItem","email","description","role","signIn","userData","photoUrl","name","dashboard_page","googlelogin","facebooklogin","studentdetails","serverresponse","logindetails","addcourseinfo","addquestioninfo","google_auth_response","coursewithquestions","studentoption","reshistory","exams","ResultstudentsComponent","getallhistoy","spstd","ShowresultComponent","score","percentage","SignupComponent","stu","stu_register","stuinfo_signup","register","SubmitexamComponent","Result","question","currentCourse","questions","output","submitted_obj","reslt","x","count","sc","page","re","resl","today","Date","percent","date","AddExamTaken","scor","per","submitresult","submitExam","environment","production","bootstrapModule","err","error"],"mappings":";;;;;;;;;;;;;;;;;AAAA,aAASA,wBAAT,CAAkCC,GAAlC,EAAuC;AACtC;AACA;AACA,aAAOC,OAAO,CAACC,OAAR,GAAkBC,IAAlB,CAAuB,YAAW;AACxC,YAAIC,CAAC,GAAG,IAAIC,KAAJ,CAAU,yBAAyBL,GAAzB,GAA+B,GAAzC,CAAR;AACAI,SAAC,CAACE,IAAF,GAAS,kBAAT;AACA,cAAMF,CAAN;AACA,OAJM,CAAP;AAKA;;AACDL,4BAAwB,CAACQ,IAAzB,GAAgC,YAAW;AAAE,aAAO,EAAP;AAAY,KAAzD;;AACAR,4BAAwB,CAACG,OAAzB,GAAmCH,wBAAnC;AACAS,UAAM,CAACC,OAAP,GAAiBV,wBAAjB;AACAA,4BAAwB,CAACW,EAAzB,GAA8B,yCAA9B;;;;;;;;;;;;;;;;ACZA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUaC,kB;AAMX,kCAAoBC,EAApB,EAA6CC,MAA7C,EAA6D;AAAA;;AAAzC,aAAAD,EAAA,GAAAA,EAAA;AAAyB,aAAAC,MAAA,GAAAA,MAAA;AAJ7C,aAAAC,YAAA,GAAe,IAAI,+DAAJ,EAAf;AAIgE;;;;mCAErD,CACV,C,CAED;;;;iCACSC,I,EAAW;AAEjB,eAAKC,MAAL,GAAcD,IAAI,CAACE,MAAL,CAAYC,KAAZ,CAAkB,CAAlB,CAAd;AACF,S,CAED;;;;qCACU;AAAA;;AAER,cAAMC,UAAU,GAAG,IAAIC,QAAJ,EAAnB;AACAD,oBAAU,CAACE,GAAX,CAAe,QAAf,EAAyB,KAAKL,MAA9B;AACAG,oBAAU,CAACE,GAAX,CAAe,UAAf,EAA2B,KAAKP,YAAL,CAAkBQ,QAA7C;AACAH,oBAAU,CAACE,GAAX,CAAe,YAAf,EAA6B,KAAKP,YAAL,CAAkBS,UAA/C;AAEA,eAAKX,EAAL,CAAQY,aAAR,CAAsBL,UAAtB,EAAkCM,SAAlC,CAA4C,UAACC,IAAD,EAAU;AACpD,gBAAGA,IAAI,CAACJ,QAAL,IAAiB,aAApB,EACA;AACEK,qBAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,mBAAI,CAACG,aAAL,GAAqBH,IAArB;AACAC,qBAAO,CAACC,GAAR,CAAY,2BAAZ;;AACA,mBAAI,CAACf,MAAL,CAAYiB,QAAZ,CAAqB,CAAC,gBAAD,CAArB,EAAyC;AAACC,2BAAW,EAAE;AAAEC,4BAAU,EAAEC,IAAI,CAACC,SAAL,CAAe,KAAI,CAACL,aAApB;AAAd;AAAd,eAAzC;AACD,aAND,MAQA;AACEM,mBAAK,CAAC,2BAAD,CAAL;AACD;AACF,WAZD;AAaD;;;;;;;uBAtCUxB,kB,EAAkB,0H,EAAA,uH;AAAA,K;;;YAAlBA,kB;AAAkB,oC;AAAA,e;AAAA,a;AAAA,wnB;AAAA;AAAA;ACV/B;;AACI;;AACI;;AACA;;AAEI;;AACI;;AAAI;;AAAU;;AACd;;AACI;;AAAO;;AAAe;;AACtB;;AAA4D;AAAA;AAAA;;AAC1D;;AAAQ;;AAAE;;AACV;;AAAQ;;AAAE;;AAAS;;AACrB;;AACF;;AAIE;;AACI;;AAAoB;;AAAW;;AAC/B;;AAAgG;AAAA;AAAA;;AAAhG;;AACF;;AAGM;;AACE;;AAAiB;;AAAY;;AAC7B;;AAAoE;AAAA,mBAAY,IAAAyB,QAAA,QAAZ;AAA4B,WAA5B;;AAApE;;AACF;;AACE;;AACV;;AAA8C;AAAA,mBAAW,IAAAC,UAAA,EAAX;AAAuB,WAAvB;;AAA0B;;AAAK;;AAE7E;;AAAuE;;AAAK;;AAC9E;;AAEV;;AACA;;AACJ;;AACJ;;;;AA3BgF;;AAAA;;AAUwC;;AAAA;;;;;;;;;sEDT3G1B,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACT2B,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEV/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACUsB;;AAAuC;;AAAmB;;;;;;AAAnB;;AAAA;;;;QDDhDC,oB;AAKX,oCAAoB7B,EAApB,EAAqC;AAAA;;AAAjB,aAAAA,EAAA,GAAAA,EAAA;AAHpB,aAAA8B,UAAA,GAAa,IAAI,iEAAJ,EAAb;AAGwC;;;;mCAE7B;AAAA;;AACT,eAAK9B,EAAL,CAAQ+B,oBAAR,GAA+BlB,SAA/B,CAAyC,UAACC,IAAD,EAAU;AAC/C,kBAAI,CAACkB,SAAL,GAAiBlB,IAAjB;AACH,WAFD;AAGD;;;uCAEW;AAEV,eAAKd,EAAL,CAAQiC,WAAR,CAAoB,KAAKH,UAAzB,EAAqCjB,SAArC,CAA+C,UAACC,IAAD,EAAU;AACvD,gBAAGA,IAAI,CAACoB,MAAL,IAAe,IAAlB,EACA;AACEnB,qBAAO,CAACC,GAAR,CAAY,8CAAZ;AACD,aAHD,MAKA;AACEO,mBAAK,CAAC,gDAAD,CAAL;AACD;AACF,WATD;AAUD;;;;;;;uBAzBUM,oB,EAAoB,0H;AAAA,K;;;YAApBA,oB;AAAoB,sC;AAAA,e;AAAA,a;AAAA,u3C;AAAA;AAAA;ACTjC;;AACI;;AACI;;AACA;;AAEI;;AACI;;AAAI;;AAAY;;AAChB;;AACI;;AAAuB;;AAAa;;AACpC;;AAAkE;AAAA;AAAA;;AAChE;;AACF;;AACF;;AACA;;AACE;;AAAqB;;AAAe;;AACpC;;AAA+D;AAAA;AAAA;;AAA/D;;AACF;;AAEA;;AAClB;;AAAkB;;AAAQ;;AAC1B;;AAAkE;AAAA;AAAA;;AAAoC;;AACtG;;AAGoB;;AACI;;AAAkB;;AAAQ;;AAC1B;;AAAkF;AAAA;AAAA;;AAAlF;;AACF;;AAEI;;AACI;;AAAkB;;AAAQ;;AAC1B;;AAAkF;AAAA;AAAA;;AAAlF;;AACF;;AACA;;AACE;;AAAkB;;AAAQ;;AAC1B;;AAAkF;AAAA;AAAA;;AAAlF;;AACF;;AACA;;AACE;;AAAkB;;AAAQ;;AAC1B;;AAAkF;AAAA;AAAA;;AAAlF;;AACF;;AACE;;AAEA;;AACI;;AAAmB;;AAAc;;AACjC;;AAA4H;AAAA;AAAA;;AAA5H;;AACF;;AAEZ;;AAA8C;AAAA,mBAAW,IAAAM,YAAA,EAAX;AAAyB,WAAzB;;AAA2B;;AAAK;;AAE9E;;AAAiG;;AAAK;;AACxG;;AAEV;;AACA;;AACJ;;AACJ;;;;AA/CsF;;AAAA;;AACxD;;AAAA;;AAKqD;;AAAA;;AAKjB;;AAAA;;AAMwC;;AAAA;;AAKM;;AAAA;;AAIA;;AAAA;;AAIA;;AAAA;;AAM8C;;AAAA;;;;;;;;;sEDpCjJN,oB,EAAoB;cALhC,uDAKgC;eALtB;AACTH,kBAAQ,EAAE,iBADD;AAETC,qBAAW,EAAE,8BAFJ;AAGTC,mBAAS,EAAE,CAAC,6BAAD;AAHF,S;AAKsB,Q;;;;;;;;;;;;;;;;;;;;;;AETjC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAgBA,QAAMQ,MAAM,GAAW,CAAC;AAAEC,UAAI,EAAE,EAAR;AAAYC,eAAS,EAAE;AAAvB,KAAD,EACC;AAAED,UAAI,EAAE,OAAR;AAAiBC,eAAS,EAAE;AAA5B,KADD,EAEC;AAAED,UAAI,EAAE,QAAR;AAAkBC,eAAS,EAAE;AAA7B,KAFD,EAIC;AACA;AAAED,UAAI,EAAE,WAAR;AAAqBC,eAAS,EAAE,iFAAhC;AAAmDC,cAAQ,EAAC,CAAC;AAACF,YAAI,EAAC,EAAN;AAASC,iBAAS,EAAC;AAAnB,OAAD,EACE;AAACD,YAAI,EAAE,SAAP;AAAiBC,iBAAS,EAAC;AAA3B,OADF,EAEE;AAACD,YAAI,EAAC,eAAN;AAAsBC,iBAAS,EAAC;AAAhC,OAFF;AAA5D,KALD,EAQC;AAAED,UAAI,EAAE,aAAR;AAAuBC,eAAS,EAAE;AAAlC,KARD,EASC;AAAED,UAAI,EAAE,cAAR;AAAwBC,eAAS,EAAE;AAAnC,KATD,EAUC;AACA;AACA;AAAED,UAAI,EAAE,gBAAR;AAA0BC,eAAS,EAAE,gGAArC;AAA6DC,cAAQ,EAAC,CAAC;AAACF,YAAI,EAAC,EAAN;AAASC,iBAAS,EAAC;AAAnB,OAAD,EACA;AAACD,YAAI,EAAC,eAAN;AAAsBC,iBAAS,EAAC;AAAhC,OADA,EAEC;AAAED,YAAI,EAAE,WAAR;AAAqBC,iBAAS,EAAE;AAAhC,OAFD,EAGC;AAAED,YAAI,EAAE,SAAR;AAAkBC,iBAAS,EAAC;AAA5B,OAHD,EAIC;AAAED,YAAI,EAAE,aAAR;AAAuBC,iBAAS,EAAE;AAAlC,OAJD,EAKC;AAAED,YAAI,EAAE,MAAR;AAAgBC,iBAAS,EAAE;AAA3B,OALD;AAAtE,KAZD,EAkBC;AAAED,UAAI,EAAE,aAAR;AAAuBC,eAAS,EAAE;AAAlC,KAlBD,EAmBC;AACA;AACA;AAAED,UAAI,EAAE,MAAR;AAAgBC,eAAS,EAAE;AAA3B,KArBD,EAsBC;AAAED,UAAI,EAAE,QAAR;AAAkBC,eAAS,EAAE,qFAA7B;AAAkDC,cAAQ,EAAC,CAAC;AAACF,YAAI,EAAC,QAAN;AAAgBC,iBAAS,EAAC;AAA1B,OAAD;AAA3D,KAtBD,CAAvB;;QAgCaE,gB;;;;;YAAAA;;;;yBAAAA,gB;AAAgB,O;AAAA,gBAHlB,CAAC,6DAAaC,OAAb,CAAqBL,MAArB,CAAD,CAGkB,EAFjB,4DAEiB;;;;0HAAhBI,gB,EAAgB;AAAA;AAAA,kBAFjB,4DAEiB;AAAA,O;AAFL,K;;;;;sEAEXA,gB,EAAgB;cAJ5B,sDAI4B;eAJnB;AACRE,iBAAO,EAAE,CAAC,6DAAaD,OAAb,CAAqBL,MAArB,CAAD,CADD;AAERvC,iBAAO,EAAE,CAAC,4DAAD;AAFD,S;AAImB,Q;;;;;;;;;;;;;;;;;;AChD7B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAOa8C,Y,GALb;AAAA;;AAME,WAAAC,KAAA,GAAQ,oBAAR;AACD,K;;;uBAFYD,Y;AAAY,K;;;YAAZA,Y;AAAY,+B;AAAA,c;AAAA,a;AAAA;AAAA;ACPzB;;;;;;;;;sEDOaA,Y,EAAY;cALxB,uDAKwB;eALd;AACTjB,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,sBAFJ;AAGTC,mBAAS,EAAE,CAAC,qBAAD;AAHF,S;AAKc,Q;;;;;;;;;;;;;;;;;;AEPzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA,2F,CAuBA;;;AACA,QAAIiB,gBAAgB,GAAY,0EAAhC;AACA,QAAIC,kBAAkB,GAAY,iBAAlC;AAEA,QAAIC,MAAM,GAAG,IAAI,wEAAJ,CAAsB,CACjC;AACEjD,QAAE,EAAE,2EAAoBkD,WAD1B;AAEEC,cAAQ,EAAE,IAAI,0EAAJ,CAAwBJ,gBAAxB;AAFZ,KADiC,EAKjC;AACE/C,QAAE,EAAE,6EAAsBkD,WAD5B;AAEEC,cAAQ,EAAE,IAAI,4EAAJ,CAA0BH,kBAA1B;AAFZ,KALiC,CAAtB,CAAb;;AAWO,aAASI,aAAT,GAAyB;AAC9B,aAAOH,MAAP;AACD;;QAkCYI,S;;;;;YAAAA,S;AAAS,kBAFR,2DAEQ;;;;yBAATA,S;AAAS,O;AAAA,iBAPT,CACT;AACEC,eAAO,EAAE,wEADX;AAEEC,kBAAU,EAAEH;AAFd,OADS,C;AAIT,gBAXO,CACP,uEADO,EAEP,oEAFO,EAGP,0DAHO,EAIP,qEAJO,EAKP,wEALO,CAWP;;;;0HAGSC,S,EAAS;AAAA,uBA9BlB,2DA8BkB,EA7BlB,kEA6BkB,EA5BlB,qEA4BkB,EA3BlB,wEA2BkB,EA1BlB,iFA0BkB,EAzBlB,iGAyBkB,EAxBlB,kGAwBkB,EAvBlB,kFAuBkB,EAtBlB,wFAsBkB,EArBlB,iGAqBkB,EApBlB,+EAoBkB,EAnBlB,2FAmBkB,EAlBlB,qFAkBkB,EAjBlB,qFAiBkB,EAhBlB,iGAgBkB;AAhBK,kBAGvB,uEAHuB,EAIvB,oEAJuB,EAKvB,0DALuB,EAMvB,qEANuB,EAOvB,wEAPuB;AAgBL,O;AATD,K;;;;;sEASRA,S,EAAS;cAhCrB,sDAgCqB;eAhCZ;AACRG,sBAAY,EAAE,CACZ,2DADY,EAEZ,kEAFY,EAGZ,qEAHY,EAIZ,wEAJY,EAKZ,iFALY,EAMZ,iGANY,EAOZ,kGAPY,EAQZ,kFARY,EASZ,wFATY,EAUZ,iGAVY,EAWZ,+EAXY,EAYZ,2FAZY,EAaZ,qFAbY,EAcZ,qFAdY,EAeZ,iGAfY,CADN;AAkBRZ,iBAAO,EAAE,CACP,uEADO,EAEP,oEAFO,EAGP,0DAHO,EAIP,qEAJO,EAKP,wEALO,CAlBD;AAyBRa,mBAAS,EAAE,CACT;AACEH,mBAAO,EAAE,wEADX;AAEEC,sBAAU,EAAEH;AAFd,WADS,CAzBH;AA8BRM,mBAAS,EAAE,CAAC,2DAAD;AA9BH,S;AAgCY,Q;;;;;;;;;;;;;;;;;;AC1EtB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;ACMI;;AAAsH;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACpH;;AACA;;AACE;;AAAkE;;AAAgB;;AACpF;;AACF;;;;;;AAHO;;AAAA;;AAC+D;;AAAA;;;;;;;;AAexE;;AAAsH;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AACpH;;AACA;;AACE;;AAAkE;;AAAgB;;AACpF;;AACF;;;;;;AAHO;;AAAA;;AAC+D;;AAAA;;;;QDlB3DC,sB;AAIX,sCAAoBzD,EAApB,EAA4CC,MAA5C,EAA4D;AAAA;;AAAxC,aAAAD,EAAA,GAAAA,EAAA;AAAwB,aAAAC,MAAA,GAAAA,MAAA;AAAmB;;;;mCAEpD;AAAA;;AAET;AACA,eAAKD,EAAL,CAAQ0D,YAAR,GAAuB7C,SAAvB,CAAiC,UAACC,IAAD,EAAQ;AAAC,kBAAI,CAAC6C,MAAL,GAAc7C,IAAd;AAAoB,WAA9D,EAHS,CAIT;AACA;AACA;AACA;AACD;;;8BAEK8C,G,EAAG;AAEL7C,iBAAO,CAACC,GAAR,CAAY,WAAW4C,GAAvB,EAFK,CAGL;;AACA,eAAK3D,MAAL,CAAYiB,QAAZ,CAAqB,CAAC,aAAD,CAArB,EAAsC;AAAEC,uBAAW,EAAE;AAAE0C,yBAAW,EAAED;AAAf;AAAf,WAAtC,EAJK,CAKL;AACH;;;;;;;uBAtBUH,sB,EAAsB,0H,EAAA,uH;AAAA,K;;;YAAtBA,sB;AAAsB,0C;AAAA,e;AAAA,a;AAAA,ijB;AAAA;AAAA;ACTnC;;AACI;;AAAgC;;AAAc;;AAC9C;;AAEA;;AAEA;;AAOA;;AACJ;;AAEA;;AAAI;;AAEJ;;AACE;;AAAgC;;AAAW;;AAC3C;;AAEA;;AAEA;;AAOA;;AACF;;;;AA1BwE;;AAAA;;AAkBF;;AAAA;;;;;;;;;sEDfzDA,sB,EAAsB;cALlC,uDAKkC;eALxB;AACT/B,kBAAQ,EAAE,qBADD;AAETC,qBAAW,EAAE,kCAFJ;AAGTC,mBAAS,EAAE,CAAC,iCAAD;AAHF,S;AAKwB,Q;;;;;;;;;;;;;;;;;;;;;;;;AETnC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASakC,kB;AAKX;AACA,kCAAoBC,KAApB,EAAmD/D,EAAnD,EAAqE;AAAA;;AAAjD,aAAA+D,KAAA,GAAAA,KAAA;AAA+B,aAAA/D,EAAA,GAAAA,EAAA;AAAqB;;;;mCAE7D;AAAA;;AAET;AAEA;AACA,eAAK+D,KAAL,CAAWC,aAAX,CAAyBnD,SAAzB,CAAmC,UAACC,IAAD,EAAU;AAE3C;AACA,kBAAI,CAACmD,iBAAL,GAAyB5C,IAAI,CAAC6C,KAAL,CAAWpD,IAAI,CAACqD,GAAL,CAAS,gBAAT,CAAX,CAAzB,CAH2C,CAK3C;;AACApD,mBAAO,CAACC,GAAR,CAAY,MAAI,CAACiD,iBAAjB;AAED,WARD;AAYD;;;kCAES;AACRG,kBAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,KAArC,CAA2CC,KAA3C,GAAmD,OAAnD;AACD;;;mCAEU;AACTH,kBAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,KAArC,CAA2CC,KAA3C,GAAmD,GAAnD;AACD;;;;;;;uBAjCUT,kB,EAAkB,+H,EAAA,0H;AAAA,K;;;YAAlBA,kB;AAAkB,oC;AAAA,gB;AAAA,a;AAAA,24E;AAAA;AAAA;ACP/B;;AACE;;AAAiC;;AAAoC;;AAErE;;AAEA;;AACE;;AACF;;AACA;;AAEE;;AACM;;AACE;;AAA6B;;AAAK;;AAAsB;;AAAS;;AAAO;;AAC1E;;AACN;;AAEA;;AAaA;;AAEI;;AAA2E;;AAAQ;;AAKnF;;AAKA;;AAGM;;AACI;;AAEA;;AAA+B;;AAAkC;;AACjE;;AAEJ;;AACA;;AAAc;;AAAsC;;AAA8B;;AAAI;;AACtF;;AAAa;;AAA8C;;AAAyB;;AAAI;;AACxF;;AAAwB;;AAAgD;;AAAmB;;AAAI;;AAC/F;;AAAY;;AAA8C;;AAAuB;;AAAI;;AACvF;;AACA;;AAEA;;AAA2G;;AAAqC;;AAAc;;AAAI;;AAAO;;AAenL;;AACF;;AAQA;;AAIA;;AACM;;AACN;;AACA;;AAGM;;AACF;;AAGJ;;AACA;;AAA8B;;AAA8B;;AAC1D;;AASF;;AACA;;AACA;;AAEI;;AACQ;;AACO;;AACP;;AACA;;AACE;;AAAuB;;AAAK;;AAC5B;;AAAqB;;AACnB;;AAAI;;AAG8D;;AAGlE;;AACQ;;AAIR;;AAEA;;AACQ;;AAIR;;AACF;;AACA;;AAAoC;;AAAU;;AAChD;;AACA;;AACE;;AACF;;AACF;;AACV;;AACA;;AACA;;AAGA;;AACA;;AACA;;AAEI;;AACQ;;AACO;;AACP;;AACA;;AACE;;AAAuB;;AAAK;;AAC5B;;AAAqB;;AACnB;;AAAI;;AAG8D;;AAGlE;;AACQ;;AAIR;;AAEA;;AACQ;;AAIR;;AACF;;AACA;;AAAoC;;AAAU;;AAChD;;AACA;;AACE;;AACF;;AACF;;AACV;;AACA;;AACA;;AAOA;;AACA;;AACA;;AAEI;;AACQ;;AACO;;AACP;;AACA;;AACE;;AAAuB;;AAAK;;AAC5B;;AAAqB;;AACnB;;AAAI;;AAG8D;;AAGlE;;AACQ;;AAIR;;AAEA;;AACQ;;AAIR;;AACF;;AACA;;AAAoC;;AAAU;;AAChD;;AACA;;AACE;;AACF;;AACF;;AACV;;AACA;;AACA;;AAKA;;AACA;;AACA;;AAEI;;AACQ;;AACO;;AACP;;AACA;;AACE;;AAAuB;;AAAK;;AAC5B;;AAAqB;;AACnB;;AAAI;;AAG8D;;AAGlE;;AACQ;;AAIR;;AAEA;;AACQ;;AAIR;;AACF;;AACA;;AAAoC;;AAAU;;AAChD;;AACA;;AACE;;AACF;;AACF;;AACV;;AACA;;AACA;;AAKA;;AACA;;AACA;;AAEI;;AACQ;;AACO;;AACP;;AACA;;AACE;;AAAuB;;AAAK;;AAC5B;;AAAqB;;AACnB;;AAAI;;AAG8D;;AAGlE;;AACQ;;AAIR;;AAEA;;AACQ;;AAIR;;AACF;;AACA;;AAAoC;;AAAU;;AAChD;;AACA;;AACE;;AACF;;AACF;;AACV;;AACA;;AACA;;AAKA;;AACA;;AACA;;AAEI;;AACQ;;AACO;;AACP;;AACA;;AACE;;AAAuB;;AAAK;;AAC5B;;AAAqB;;AACnB;;AAAI;;AAG8D;;AAGlE;;AACQ;;AAIR;;AAEA;;AACQ;;AAIR;;AACF;;AACA;;AAAoC;;AAAU;;AAChD;;AACA;;AACE;;AACF;;AACF;;AACV;;AACA;;AACA;;;;AA7WmC;;AAAA;;;;;;;;;sEDMtBA,kB,EAAkB;cAL9B,uDAK8B;eALpB;AACTpC,kBAAQ,EAAE,eADD;AAETC,qBAAW,EAAE,4BAFJ;AAGTC,mBAAS,EAAE,CAAC,2BAAD;AAHF,S;AAKoB,Q;;;;;;;;;;;;;;;;;;;;;;;;AET/B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASa4C,uB;AASX,uCAAoBT,KAApB,EAA2C;AAAA;;AAAvB,aAAAA,KAAA,GAAAA,KAAA;AALpB,aAAAU,cAAA,GAAiB;AACf,4BAAmBC,YAAY,CAACC,OAAb,CAAqB,SAArB,CADJ;AAEf,6BAAoBD,YAAY,CAACC,OAAb,CAAqB,UAArB;AAFL,SAAjB;AAK8C;;;;mCAEnC;AAAA;;AAET,eAAKZ,KAAL,CAAWC,aAAX,CAAyBnD,SAAzB,CAAmC,UAACC,IAAD,EAAU;AAC3C,kBAAI,CAAC8D,UAAL,GAAkBvD,IAAI,CAAC6C,KAAL,CAAWpD,IAAI,CAACqD,GAAL,CAAS,gBAAT,CAAX,CAAlB;AACApD,mBAAO,CAACC,GAAR,CAAY,MAAI,CAAC4D,UAAjB;AACD,WAHD;AAIA;;;;;;;uBAjBSJ,uB,EAAuB,+H;AAAA,K;;;YAAvBA,uB;AAAuB,yC;AAAA,gB;AAAA,a;AAAA,krF;AAAA;AAAA;ACPpC;;AACI;;AAAiC;;AAAK;;AAEtC;;AAEA;;AACE;;AACF;;AACA;;AAEE;;AACM;;AACE;;AAA6B;;AAAK;;AAAsB;;AAAS;;AAAO;;AAC1E;;AACN;;AAEA;;AAaA;;AACI;;AAA2E;;AAAQ;;AAMnF;;AAKA;;AAGM;;AACI;;AAEA;;AAAI;;AAAkF;;AACtF;;AAEJ;;AACA;;AAAgC;;AAAsC;;AAA8B;;AAAI;;AACxG;;AAA2B;;AAA8C;;AAAsB;;AAAI;;AACnG;;AAA4B;;AAAgD;;AAAwB;;AAAI;;AACxG;;AAAwB;;AAA8C;;AAAmB;;AAAI;;AAC7F;;AAAiB;;AAA8C;;AAAwB;;AAAI;;AAC7F;;AACA;;AAEA;;AAA2G;;AAAqC;;AAAc;;AAAI;;AAAO;;AAenL;;AACF;;AAwCA;;AACA;;AAEA;;AA4GA;;AAIA;;AACM;;AACN;;AACA;;AAGM;;AACF;;AAGJ;;AACA;;AAA8B;;AAA8B;;AAC1D;;AAWF;;AACA;;AACA;;AAEA;;AACM;;AACQ;;AACR;;AACA;;AACE;;AAAuB;;AAAK;;AAC5B;;AAAqB;;AACnB;;AAAI;;AAG8D;;AAGlE;;AACQ;;AAIR;;AAEA;;AACQ;;AAIR;;AACF;;AACA;;AAA6C;;AAAU;;AACzD;;AACA;;AACE;;AACF;;AACF;;AACJ;;AACA;;AACA;;AAMA;;AACA;;AACA;;AAEI;;AACQ;;AACO;;AACP;;AACA;;AACE;;AAAuB;;AAAK;;AAC5B;;AAAqB;;AACnB;;AAAI;;AAG8D;;AAGlE;;AACQ;;AAIR;;AAEA;;AACQ;;AAIR;;AACF;;AACA;;AAAoC;;AAAU;;AAChD;;AACA;;AACE;;AACF;;AACF;;AACV;;AACA;;AACA;;AAGA;;AACA;;AACA;;AAEI;;AACQ;;AACO;;AACP;;AACA;;AACE;;AAAuB;;AAAK;;AAC5B;;AAAqB;;AACnB;;AAAI;;AAG8D;;AAGlE;;AACQ;;AAIR;;AAEA;;AACQ;;AAIR;;AACF;;AACA;;AAAoC;;AAAU;;AAChD;;AACA;;AACE;;AACF;;AACF;;AACV;;AACA;;AACA;;AAOA;;AACA;;AACA;;AAEI;;AACQ;;AACO;;AACP;;AACA;;AACE;;AAAuB;;AAAK;;AAC5B;;AAAqB;;AACnB;;AAAI;;AAG8D;;AAGlE;;AACQ;;AAIR;;AAEA;;AACQ;;AAIR;;AACF;;AACA;;AAAoC;;AAAU;;AAChD;;AACA;;AACE;;AACF;;AACF;;AACV;;AACA;;AACA;;AAKA;;AACA;;AACA;;AAEI;;AACQ;;AACO;;AACP;;AACA;;AACE;;AAAuB;;AAAK;;AAC5B;;AAAqB;;AACnB;;AAAI;;AAG8D;;AAGlE;;AACQ;;AAIR;;AAEA;;AACQ;;AAIR;;AACF;;AACA;;AAAoC;;AAAU;;AAChD;;AACA;;AACE;;AACF;;AACF;;AACV;;AACA;;AACA;;AAKA;;AACA;;AACA;;AAEI;;AACQ;;AACO;;AACP;;AACA;;AACE;;AAAuB;;AAAK;;AAC5B;;AAAqB;;AACnB;;AAAI;;AAG8D;;AAGlE;;AACQ;;AAIR;;AAEA;;AACQ;;AAIR;;AACF;;AACA;;AAAoC;;AAAU;;AAChD;;AACA;;AACE;;AACF;;AACF;;AACV;;AACA;;AACA;;AAKA;;AACA;;AACA;;AAEI;;AACQ;;AACO;;AACP;;AACA;;AACE;;AAAuB;;AAAK;;AAC5B;;AAAqB;;AACnB;;AAAI;;AAG8D;;AAGlE;;AACQ;;AAIR;;AAEA;;AACQ;;AAIR;;AACF;;AACA;;AAAoC;;AAAU;;AAChD;;AACA;;AACE;;AACF;;AACF;;AACV;;AACA;;AACA;;;;AAhgBoC;;AAAA;;AAEd;;AAAA;;;;;;;;;sEDxCXA,uB,EAAuB;cALnC,uDAKmC;eALzB;AACT9C,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKyB,Q;;;;;;;;;;;;;;;;;;;;;;AETpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaiD,W;AAEX;AACA,2BAAoBC,IAApB,EAAsC;AAAA;;AAAlB,aAAAA,IAAA,GAAAA,IAAA;AAAqB,O,CAEzC;;;;;qCACaC,W,EAAW;AAEtB,iBAAO,KAAKD,IAAL,CAAUE,IAAV,CAA+B,oCAA/B,EAAqED,WAArE,CAAP;AACD;;;kCAESE,Y,EAAY;AAEpB,iBAAO,KAAKH,IAAL,CAAUE,IAAV,CAA+B,iCAA/B,EAAkEC,YAAlE,CAAP;AACD;;;sCAEajD,S,EAAS;AAErB,iBAAO,KAAK8C,IAAL,CAAUE,IAAV,CAA8B,qCAA9B,EAAqEhD,SAArE,CAAP;AACD;;;oCAEWkD,O,EAAO;AAEjB,iBAAO,KAAKJ,IAAL,CAAUE,IAAV,CAA+B,uCAA/B,EAAwEE,OAAxE,CAAP;AACD;;;qCAEYC,O,EAAO;AAElB,iBAAO,KAAKL,IAAL,CAAUE,IAAV,CAA+B,mCAA/B,EAAoEG,OAApE,CAAP;AACD,S,CAED;;;;uCAEY;AAEV,iBAAO,KAAKL,IAAL,CAAUX,GAAV,CAA4B,qCAA5B,CAAP;AACD;;;sCAEU;AAET,iBAAO,KAAKW,IAAL,CAAUX,GAAV,CAAoC,sCAApC,CAAP;AACD,S,CACD;AACA;AACA;AACA;AACA;;;;qCACaiB,U,EAAU;AAErB;AACA,iBAAO,KAAKN,IAAL,CAAUE,IAAV,CAA2B,+BAA3B,EAA4DI,UAA5D,CAAP;AACD,S,CAGD;;;;0CAEkBC,S,EAAS;AAEzB,iBAAO,KAAKP,IAAL,CAAUE,IAAV,CAAoC,0CAApC,EAAgFK,SAAhF,CAAP;AACD,S,CAGD;;;;+CAEoB;AAElB,iBAAO,KAAKP,IAAL,CAAUX,GAAV,CAA4B,qCAA5B,CAAP;AACD,S,CAED;;;;qCAEamB,O,EAAO;AAElB,iBAAO,KAAKR,IAAL,CAAUE,IAAV,CAA+B,kCAA/B,EAAmEM,OAAnE,CAAP;AACD;;;;;;;uBA1EUT,W,EAAW,uH;AAAA,K;;;aAAXA,W;AAAW,eAAXA,WAAW,K;AAAA,kBAFV;;;;;sEAEDA,W,EAAW;cAHvB,wDAGuB;eAHZ;AACVU,oBAAU,EAAE;AADF,S;AAGY,Q;;;;;;;;;;;;;;;;;;;;;;ACRxB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAWaC,iB;AAWX,iCAAoBzB,KAApB,EAAmD/D,EAAnD,EAA4EC,MAA5E,EAA4F;AAAA;;AAAxE,aAAA8D,KAAA,GAAAA,KAAA;AAA+B,aAAA/D,EAAA,GAAAA,EAAA;AAAyB,aAAAC,MAAA,GAAAA,MAAA;AAT5E,aAAAwF,UAAA,GAAa,IAAI,+DAAJ,EAAb;AAGA,aAAAC,SAAA,GAAY,EAAZ;AAGA,aAAAC,MAAA,GAAS,EAAT,CAG4F,CAH/E;AAGkF;;;;mCAEpF;AAAA;;AAET,cAAIC,CAAJ,CAFS,CAGT;;AACA,eAAK7B,KAAL,CAAWC,aAAX,CAAyBnD,SAAzB,CAAmC,UAACC,IAAD,EAAU;AAAE,kBAAI,CAAC+E,aAAL,GAAqBxE,IAAI,CAAC6C,KAAL,CAAWpD,IAAI,CAACqD,GAAL,CAAS,kBAAT,CAAX,CAArB;AAA+D,WAA9G;AACEpD,iBAAO,CAACC,GAAR,CAAY,KAAK6E,aAAjB;AAEA,eAAKH,SAAL,GAAiB,KAAKG,aAAL,CAAmBC,SAApC;AACA/E,iBAAO,CAACC,GAAR,CAAY,KAAK0E,SAAjB;AAEA3E,iBAAO,CAACC,GAAR,CAAY,KAAK0E,SAAL,CAAeK,MAA3B;;AAEF,eAAIH,CAAC,GAAG,CAAR,EAAWA,CAAC,GAAG,KAAKF,SAAL,CAAeK,MAA9B,EAAsCH,CAAC,EAAvC,EACA;AACI,gBAAG,KAAKF,SAAL,CAAeE,CAAf,EAAkBI,GAAlB,IAAyB,CAA5B,EACA;AACI,mBAAKC,SAAL,GAAiB,KAAKP,SAAL,CAAeE,CAAf,CAAjB;AACA7E,qBAAO,CAACC,GAAR,CAAY,KAAKiF,SAAjB;AACH,aAJD,MAMA;AACIlF,qBAAO,CAACC,GAAR,CAAY,gDAAZ;AACH;AACJ;AACF;;;6BAEIgF,G,EAAG;AACN,cAAIJ,CAAC,GAAGI,GAAR;AACAJ,WAAC,GAACA,CAAC,GAAC,CAAJ;AAEA,eAAKK,SAAL,GAAiB,KAAKP,SAAL,CAAeE,CAAC,GAAC,CAAjB,CAAjB;AACD;;;6BAGII,G,EAAG;AACN,cAAIE,QAAQ,GAAoB9B,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAhC;AAEA,cAAI8B,CAAC,GAAGH,GAAR,CAHM,CAGO;;AAEb,cAAGG,CAAC,GAAG,KAAKT,SAAL,CAAeK,MAAtB,EACA;AACE,gBAAG,KAAKN,UAAL,CAAgBW,IAAhB,IAAwB,KAAKV,SAAL,CAAeS,CAAC,GAAC,CAAjB,EAAoBE,OAA/C,EACA;AACI,mBAAKV,MAAL,CAAYQ,CAAC,GAAC,CAAd,IAAmB,CAAnB;AACH,aAHD,MAKA;AACI,mBAAKR,MAAL,CAAYQ,CAAC,GAAC,CAAd,IAAmB,CAAnB;AACH;;AACDpF,mBAAO,CAACC,GAAR,CAAY,KAAK2E,MAAjB;AAEAQ,aAAC,GAACA,CAAC,GAAC,CAAJ;AAEA,iBAAKF,SAAL,GAAiB,KAAKP,SAAL,CAAeS,CAAC,GAAC,CAAjB,CAAjB;AACAD,oBAAQ,CAACI,KAAT;AACD,WAhBD,MAmBA;AACI,gBAAG,KAAKb,UAAL,CAAgBW,IAAhB,IAAwB,KAAKV,SAAL,CAAeS,CAAC,GAAC,CAAjB,EAAoBE,OAA/C,EACA;AACI,mBAAKV,MAAL,CAAYQ,CAAC,GAAC,CAAd,IAAmB,CAAnB;AACH,aAHD,MAKA;AACI,mBAAKR,MAAL,CAAYQ,CAAC,GAAC,CAAd,IAAmB,CAAnB;AACH;;AACDpF,mBAAO,CAACC,GAAR,CAAY,KAAK2E,MAAjB;AACA,gBAAIY,CAAC,GAAG;AAAEC,yBAAW,EAAE,KAAKb;AAApB,aAAR;AAEA,iBAAK1F,MAAL,CAAYiB,QAAZ,CAAqB,CAAC,QAAD,CAArB,EAAiC;AAAEC,yBAAW,EAAE;AAAEsF,mBAAG,EAAEpF,IAAI,CAACC,SAAL,CAAeiF,CAAf,CAAP;AAA0BG,oBAAI,EAAErF,IAAI,CAACC,SAAL,CAAe,KAAKuE,aAApB;AAAhC;AAAf,aAAjC;AACH,WArCK,CAsCN;;AAED;;;;;;;uBAvFUL,iB,EAAiB,+H,EAAA,0H,EAAA,uH;AAAA,K;;;YAAjBA,iB;AAAiB,mC;AAAA,e;AAAA,c;AAAA,ohB;AAAA;AAAA;ACX9B;;AACI;;AAAsB;;AAA0B;;AAAK;;AAAI;;AACzD;;AAAgB;;AAAwB;;AAAI;;AAC5C;;AACI;;AAA0C;AAAA;AAAA;;AAA1C;;AAA4E;;AAAqB;;AAAI;;AACrG;;AAA0C;AAAA;AAAA;;AAA1C;;AAA4E;;AAAqB;;AAAI;;AACrG;;AAA0C;AAAA;AAAA;;AAA1C;;AAA4E;;AAAqB;;AAAI;;AACrG;;AAA0C;AAAA;AAAA;;AAA1C;;AAA4E;;AAAqB;;AAAI;;AACzG;;AAEA;;AACI;;AAAkC;AAAA,mBAAS,IAAAmB,IAAA,mBAAT;AAA4B,WAA5B;;AAA4C;;AAAe;;AAAK;;AACpG;;AAAkC;AAAA,mBAAS,IAAAC,IAAA,mBAAT;AAA4B,WAA5B;;AAA4C;;AAAW;;AAE3F;;AACF;;;;AAdwB;;AAAA;;AACN;;AAAA;;AAE8B;;AAAA;;AAAkC;;AAAA;;AAClC;;AAAA;;AAAkC;;AAAA;;AAClC;;AAAA;;AAAkC;;AAAA;;AAClC;;AAAA;;AAAkC;;AAAA;;;;;;;;;sEDIvEpB,iB,EAAiB;cAN7B,uDAM6B;eANnB;AACT9D,kBAAQ,EAAE,cADD;AAETC,qBAAW,EAAE,2BAFJ;AAGTC,mBAAS,EAAE,CAAC,0BAAD;AAHF,S;AAMmB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEX9B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQaiF,a;AAEX,6BAAoB5G,MAApB,EAAoC;AAAA;;AAAhB,aAAAA,MAAA,GAAAA,MAAA;AAAmB;;;;mCAE5B,CACV;;;qCAEO;AAER,eAAKA,MAAL,CAAYiB,QAAZ,CAAqB,CAAC,OAAD,CAArB;AACD;;;sCAEU;AAET,eAAKjB,MAAL,CAAYiB,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD;;;;;;;uBAfY2F,a,EAAa,uH;AAAA,K;;;YAAbA,a;AAAa,+B;AAAA,e;AAAA,a;AAAA,owB;AAAA;AAAA;ACR1B;;AACE;;AACE;;AAAsB;;AAAiB;;AAAM;;AAAK;;AACpD;;AACA;;AACE;;AAAwB;;AAA4C;;AACpE;;AAA2C;;AAAsC;;AAAc;;AAAI;;AAAS;;AAE9G;;AACA;;AACE;;AAAwC;AAAA,mBAAW,IAAAC,UAAA,EAAX;AAAuB,WAAvB;;AAAyB;;AAAK;;AACtE;;AAAyC;AAAA,mBAAW,IAAAC,WAAA,EAAX;AAAwB,WAAxB;;AAA0B;;AAAM;;AAC3E;;AACF;;AAIA;;AACE;;AACE;;AAAI;;AAAwB;;AAC5B;;AAAG;;AAA2E;;AAAI;;AAChF;;AAAI;;AAA2E;;AAAI;;AAA0E;;AAC/J;;AAAI;;AAAwB;;AAAiB;;AAAqB;;AAAK;;AAAI;;AAC7E;;AACA;;AACE;;AACF;;AACF;;AAAM;;AAIN;;AACE;;AACE;;AACF;;AACA;;AACE;;AAAI;;AAAwB;;AAC5B;;AAAG;;AAA2E;;AAAI;;AAClF;;AAAI;;AAA2E;;AAAI;;AAA0E;;AAC7J;;AAAwB;;AAAiB;;AAAqB;;AAAK;;AAAI;;AACzE;;AACF;;AAAM;;AAEN;;AACE;;AACE;;AAAI;;AAAwB;;AAC5B;;AAAG;;AAA2E;;AAAI;;AAA+E;;AAAI;;AAA2E;;AAAI;;AAA0E;;AAC9T;;AAAwB;;AAAiB;;AAAqB;;AAAK;;AAAI;;AACzE;;AACA;;AACE;;AACF;;AACF;;AAAM;;AAEN;;AAA6B;;AAAY;;AAA8D;;;;;;;;sED9C1FF,a,EAAa;cALzB,uDAKyB;eALf;AACTnF,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,uBAFJ;AAGTC,mBAAS,EAAE,CAAC,sBAAD;AAHF,S;AAKe,Q;;;;;;;;;;;;;;;;;;;;;;AER1B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASaoF,qB;AAKX,qCAAoBjD,KAApB,EAAmD/D,EAAnD,EAA4EC,MAA5E,EAA4F;AAAA;;AAAxE,aAAA8D,KAAA,GAAAA,KAAA;AAA+B,aAAA/D,EAAA,GAAAA,EAAA;AAAyB,aAAAC,MAAA,GAAAA,MAAA;AAAmB;;;;mCAEpF;AAAA;;AACP,eAAK8D,KAAL,CAAWC,aAAX,CAAyBnD,SAAzB,CAAmC,UAACC,IAAD,EAAU;AACzC,kBAAI,CAACP,UAAL,GAAkBO,IAAI,CAACqD,GAAL,CAAS,aAAT,CAAlB;AACApD,mBAAO,CAACC,GAAR,CAAY,MAAI,CAACT,UAAjB;AACD,WAHH;AAIE,cAAI0G,CAAC,GAAG;AAAEC,sBAAU,EAAE,KAAK3G;AAAnB,WAAR;AAEF,eAAKP,EAAL,CAAQmH,iBAAR,CAA0BF,CAA1B,EAA6BpG,SAA7B,CAAuC,UAACC,IAAD,EAAU;AAAE,kBAAI,CAACsG,mBAAL,GAA2B/F,IAAI,CAACC,SAAL,CAAeR,IAAf,CAA3B;AAAkD,WAArG,EAPO,CASP;AACH;;;oCAEQ;AAEL,eAAKb,MAAL,CAAYiB,QAAZ,CAAqB,CAAC,MAAD,CAArB,EAA+B;AAAEC,uBAAW,EAAE;AAAEkG,8BAAgB,EAAE,KAAKD;AAAzB;AAAf,WAA/B;AACH;;;;;;;uBAtBUJ,qB,EAAqB,+H,EAAA,0H,EAAA,uH;AAAA,K;;;YAArBA,qB;AAAqB,uC;AAAA,e;AAAA,a;AAAA,oR;AAAA;AAAA;ACRpB;;AACE;;AACE;;AACA;;AACF;;AACF;;AAEV;;AACQ;;AACI;;AAAG;;AAAqB;;AAC5B;;AACA;;AACE;;AAAuB;;AAA0B;;AACjD;;AAAqB;;AACnB;;AAAI;;AAG8D;;AAGlE;;AACQ;;AAIR;;AAEA;;AACQ;;AAIR;;AACF;;AACA;;AAA2B;AAAA,mBAAW,IAAAM,SAAA,EAAX;AAAsB,WAAtB;;AAAwB;;AAAU;;AAC/D;;AACA;;AACE;;AACF;;AACF;;AAGA;;AACM;;AACE;;AACA;;AACF;;AACF;;;;;;;;sEDvCDN,qB,EAAqB;cALjC,uDAKiC;eALvB;AACTtF,kBAAQ,EAAE,kBADD;AAETC,qBAAW,EAAE,+BAFJ;AAGTC,mBAAS,EAAE,CAAC,8BAAD;AAHF,S;AAKuB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AETlC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAaa2F,c;AAKX,8BAAoBtH,MAApB,EAA4CD,EAA5C,EAAqEwH,SAArE,EAA6F;AAAA;;AAAzE,aAAAvH,MAAA,GAAAA,MAAA;AAAwB,aAAAD,EAAA,GAAAA,EAAA;AAAyB,aAAAwH,SAAA,GAAAA,SAAA;AAH9D,aAAAC,IAAA,GAAa,gEAAb;AACP,aAAAC,UAAA,GAAa,IAAI,8DAAJ,EAAb;AAEgG;;;;mCAErF,CAEV;;;yCAEa;AAAA;;AAEZ3G,iBAAO,CAACC,GAAR,CAAY,OAAZ;AACA,eAAKhB,EAAL,CAAQ2H,SAAR,CAAkB,KAAKD,UAAvB,EAAmC7G,SAAnC,CAA6C,UAACC,IAAD,EAAU;AACrD,gBAAGA,IAAI,CAACoB,MAAL,IAAe,IAAlB,EACA;AACEwC,0BAAY,CAACkD,OAAb,CAAqB,OAArB,EAA8B,MAAI,CAACF,UAAL,CAAgBG,KAA9C,EADF,CAGE;AACA;;AACA,kBAAG/G,IAAI,CAACgH,WAAL,CAAiBC,IAAjB,IAAyB,OAA5B,EAAoC;AAClChH,uBAAO,CAACC,GAAR,CAAY,wBAAZ;;AACA,sBAAI,CAACf,MAAL,CAAYiB,QAAZ,CAAqB,CAAC,gBAAD,CAArB;AACD,eAHD,MAII;AACFH,uBAAO,CAACC,GAAR,CAAY,0BAAZ;;AACA,sBAAI,CAACf,MAAL,CAAYiB,QAAZ,CAAqB,CAAC,WAAD,CAArB;AACD;AAGF,aAhBD,MAmBA;AACEK,mBAAK,CAAC,mCAAD,CAAL;AACD;AACF,WAvBD;AAwBD;;;sCAEU;AAAA;;AAETR,iBAAO,CAACC,GAAR,CAAY,oCAAZ;AACE,eAAKwG,SAAL,CAAeQ,MAAf,CAAsB,0EAAoBhF,WAA1C,EAAuDzD,IAAvD,CAA4D,UAAC0I,QAAD,EAAc;AAC1E,kBAAI,CAACR,IAAL,GAAYQ,QAAZ;AACAvD,wBAAY,CAACkD,OAAb,CAAqB,SAArB,EAAgC,MAAI,CAACH,IAAL,CAAUS,QAA1C;AACAxD,wBAAY,CAACkD,OAAb,CAAqB,UAArB,EAAiC,MAAI,CAACH,IAAL,CAAUU,IAA3C;AACApH,mBAAO,CAACC,GAAR,CAAY,MAAI,CAACyG,IAAjB;;AACA,gBAAG,MAAI,CAACA,IAAR,EACA;AACE,oBAAI,CAACxH,MAAL,CAAYiB,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD;AACA,WATD;AAUH;;;wCAEY;AAAA;;AAETH,iBAAO,CAACC,GAAR,CAAY,sCAAZ;AACA,eAAKwG,SAAL,CAAeQ,MAAf,CAAsB,4EAAsBhF,WAA5C,EAAyDzD,IAAzD,CAA8D,UAAC0I,QAAD,EAAc;AAC5E,mBAAI,CAACR,IAAL,GAAYQ,QAAZ;AACAvD,wBAAY,CAACkD,OAAb,CAAqB,SAArB,EAAgC,OAAI,CAACH,IAAL,CAAUS,QAA1C;AACAxD,wBAAY,CAACkD,OAAb,CAAqB,UAArB,EAAiC,OAAI,CAACH,IAAL,CAAUU,IAA3C;;AACA,gBAAG,OAAI,CAACV,IAAR,EACA;AACE,qBAAI,CAACxH,MAAL,CAAYiB,QAAZ,CAAqB,CAAC,QAAD,CAArB;AACD;AACA,WARD;AASH;;;;;;;uBAnEUqG,c,EAAc,uH,EAAA,0H,EAAA,kI;AAAA,K;;;YAAdA,c;AAAc,gC;AAAA,e;AAAA,a;AAAA,8kC;AAAA;AAAA;ACY3B;;AACE;;AACI;;AACA;;AAGI;;AACI;;AAAI;;AAAM;;AACV;;AAEF;;AAA0E;AAAA;AAAA;;AAA1E;;AACI;;AAGA;;AAEJ;;AAAmF;AAAA;AAAA;;AAAnF;;AACM;;AAGA;;AACN;;AAAqD;;AAAwB;;AAAW;;AAExF;;AAGA;;AAAwC;;AAAgB;;AAAI;;AAE5D;;AACA;;AAAuE;AAAA,mBAAW,IAAAa,cAAA,EAAX;AAA2B,WAA3B;;AAA6B;;AAAK;;AACzG;;AAII;;AAAiB;;AAAoB;;AAA6C;;AAAM;;AAAI;;AAC5F;;AAA8B;;AAAE;;AAGhC;;AACE;;AAAgG;AAAA,mBAAS,IAAAC,WAAA,EAAT;AAAsB,WAAtB;;AAAwB;;AAA6B;;AAAkB;;AACvK;;AAAgG;AAAA,mBAAS,IAAAC,aAAA,EAAT;AAAwB,WAAxB;;AAA0B;;AAA+B;;AAAoB;;AAC/K;;AAKR;;AAEF;;AAGA;;AACJ;;AACF;;;;AA3CsF;;AAAA;;AAMS;;AAAA;;;;;;;;;sED5BlFf,c,EAAc;cAL1B,uDAK0B;eALhB;AACT7F,kBAAQ,EAAE,WADD;AAETC,qBAAW,EAAE,wBAFJ;AAGTC,mBAAS,EAAE,CAAC,uBAAD;AAHF,S;AAKgB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEb3B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAAa2G,c;;;;QAaAC,c;;;;QAOAC,Y;;;;QAKAC,a;;;;QAKAC,e;;OAWb;;;QACaC,oB;;;;QAKAxH,U;;;;QAMAyH,mB;;;;QAOAC,a;;;;QAIAnD,M;;;;QAWAoD,U,GAAb;AAAA;;AAWI,WAAAC,KAAA,GAAM,EAAN;AACH,K;;;;;;;;;;;;;;;;;ACvFD;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;ACWM;;AACE;;AAAgB;;AAAU;;AAC1B;;AAAI;;AAAW;;AACf;;AAAI;;AAAgB;;AACpB;;AAAI;;AAAY;;AAClB;;;;;;AAJkB;;AAAA;;AACZ;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;MDbZ;;;QAOaC,uB;AAIX,uCAAoBjJ,EAApB,EAAoC;AAAA;;AAAhB,aAAAA,EAAA,GAAAA,EAAA;AAAmB;;;;mCAE5B;AAAA;;AACT;AACA,cAAIiH,CAAC,GAAC;AAACY,iBAAK,EAAEnD,YAAY,CAACC,OAAb,CAAqB,OAArB;AAAR,WAAN;AACA,eAAK3E,EAAL,CAAQkJ,YAAR,CAAqBjC,CAArB,EAAwBpG,SAAxB,CAAkC,UAACC,IAAD,EAAU;AAAE,mBAAI,CAACqI,KAAL,GAAWrI,IAAX;AAAkB,WAAhE;AACAC,iBAAO,CAACC,GAAR,CAAY,KAAKmI,KAAjB,EAJS,CAKT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGD;;;;;;;uBA3BUF,uB,EAAuB,0H;AAAA,K;;;YAAvBA,uB;AAAuB,yC;AAAA,e;AAAA,a;AAAA,oM;AAAA;AAAA;ACTpC;;AACA;;AACG;;AACG;;AACE;;AAAgB;;AAAI;;AACpB;;AAAgB;;AAAK;;AACrB;;AAAgB;;AAAU;;AAC1B;;AAAgB;;AAAM;;AACxB;;AACF;;AACA;;AACE;;AAMF;;AACF;;AACA;;;;AARQ;;AAAA;;;;;;;;;sEDFGA,uB,EAAuB;cALnC,uDAKmC;eALzB;AACTvH,kBAAQ,EAAE,oBADD;AAETC,qBAAW,EAAE,iCAFJ;AAGTC,mBAAS,EAAE,CAAC,gCAAD;AAHF,S;AAKyB,Q;;;;;;;;;;;;;;;;;;;;;;AETpC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAQawH,mB;AAEX,mCAAoBrF,KAApB,EAA0C;AAAA;;AAAtB,aAAAA,KAAA,GAAAA,KAAA;AAAyB;;;;mCAKlC;AAAA;;AAET,eAAKA,KAAL,CAAWC,aAAX,CAAyBnD,SAAzB,CAAmC,UAACC,IAAD,EAAU;AAAE,mBAAI,CAACuI,KAAL,GAAYhI,IAAI,CAAC6C,KAAL,CAAWpD,IAAI,CAACqD,GAAL,CAAS,MAAT,CAAX,CAAZ,EAA0C,OAAI,CAACmF,UAAL,GAAkBjI,IAAI,CAAC6C,KAAL,CAAWpD,IAAI,CAACqD,GAAL,CAAS,KAAT,CAAX,CAA5D,EAAyF,OAAI,CAACwB,MAAL,GAActE,IAAI,CAAC6C,KAAL,CAAWpD,IAAI,CAACqD,GAAL,CAAS,MAAT,CAAX,CAAvG;AAAqI,WAApL;;AACA,cAAG,KAAKwB,MAAL,IAAe,CAAlB,EAAoB;AAClB,iBAAKc,GAAL,GAAU,MAAV;AACD,WAFD,MAGI;AACF,iBAAKA,GAAL,GAAU,MAAV;AACD;;AACD1F,iBAAO,CAACC,GAAR,CAAY,KAAKqI,KAAjB;AACAtI,iBAAO,CAACC,GAAR,CAAY,KAAKsI,UAAjB;AACAvI,iBAAO,CAACC,GAAR,CAAY,KAAK2E,MAAjB;AACA5E,iBAAO,CAACC,GAAR,CAAY,KAAKyF,GAAjB,EAZS,CAab;AACG;;;;;;;uBArBU2C,mB,EAAmB,+H;AAAA,K;;;YAAnBA,mB;AAAmB,qC;AAAA,e;AAAA,a;AAAA,+H;AAAA;AAAA;ACRhC;;AACE;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAgB;;AAAC;;AACjB;;AAAgB;;AAAK;;AACrB;;AAAgB;;AAAU;;AAC1B;;AAAgB;;AAAM;;AACxB;;AACF;;AACA;;AACE;;AACE;;AAAgB;;AAAC;;AACjB;;AAAI;;AAAS;;AACb;;AAAI;;AAAc;;AAClB;;AAAI;;AAAO;;AACb;;AACF;;AACF;;AACF;;AACA;;AACF;;;;AARc;;AAAA;;AACA;;AAAA;;AACA;;AAAA;;;;;;;;sEDTDA,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACT1H,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;AERhC;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAUa2H,e;AAQX;AACA,+BAAoBtJ,MAApB,EAA4CD,EAA5C,EAA6D;AAAA;;AAAzC,aAAAC,MAAA,GAAAA,MAAA;AAAwB,aAAAD,EAAA,GAAAA,EAAA,CAAiB,CAJ7D;;AACA,aAAAwJ,GAAA,GAAM,IAAI,gEAAJ,EAAN;AAGgE;;;;mCAErD,CAEV,C,CAED;;;;mCACQ;AAAA;;AAEN;AACA,eAAKxJ,EAAL,CAAQyJ,YAAR,CAAqB,KAAKD,GAA1B,EAA+B3I,SAA/B,CAAyC,UAACC,IAAD,EAAU;AACjDC,mBAAO,CAACC,GAAR,CAAY,QAAZ;AACAD,mBAAO,CAACC,GAAR,CAAYF,IAAZ;;AACA,gBAAIA,IAAI,CAACoB,MAAL,IAAe,IAAhB,IAA0B,OAAI,CAACsH,GAAL,CAASzB,IAAT,IAAiB,SAA9C,EACA;AACEhH,qBAAO,CAACC,GAAR,CAAY,qEAAZ;;AACA,qBAAI,CAACf,MAAL,CAAYiB,QAAZ,CAAqB,CAAC,WAAD,CAArB,EAAoC;AAACC,2BAAW,EAAE;AAAEuI,gCAAc,EAAErI,IAAI,CAACC,SAAL,CAAe,OAAI,CAACkI,GAApB;AAAlB;AAAd,eAApC;AACD,aAJD,MAMK,IAAI1I,IAAI,CAACoB,MAAL,IAAe,IAAhB,IAA0B,OAAI,CAACsH,GAAL,CAASzB,IAAT,IAAiB,OAA9C,EACL;AACEhH,qBAAO,CAACC,GAAR,CAAY,mEAAZ;;AACA,qBAAI,CAACf,MAAL,CAAYiB,QAAZ,CAAqB,CAAC,gBAAD,CAArB,EAAyC;AAAEC,2BAAW,EAAG;AAAEuI,gCAAc,EAAErI,IAAI,CAACC,SAAL,CAAe,OAAI,CAACkI,GAApB;AAAlB;AAAhB,eAAzC;AACD,aAJI,MAMA,IAAG1I,IAAI,CAACoB,MAAL,IAAe,QAAlB,EACL;AACEX,mBAAK,CAAC,gEAAD,CAAL;AACD;AACF,WAnBD,EAHM,CA0BJ;AAEA;;AACA,eAAKtB,MAAL,CAAYiB,QAAZ,CAAqB,CAAC,WAAD,CAArB,EAAoC;AAACC,uBAAW,EAAE;AAAEuI,4BAAc,EAAErI,IAAI,CAACC,SAAL,CAAe,KAAKkI,GAApB;AAAlB;AAAd,WAApC;AACH;;;;;;;uBA9CUD,e,EAAe,uH,EAAA,0H;AAAA,K;;;YAAfA,e;AAAe,iC;AAAA,e;AAAA,c;AAAA,kqD;AAAA;AAAA;ACV5B;;AACA;;AACE;;AACI;;AAA6E;;AAAI;;AAAW;;AAAK;;AAEjG;;AAAO;;AAAY;;AAAQ;;AAC3B;;AAAqE;AAAA;AAAA;;AAArE;;AAAyG;;AAAI;;AAE7G;;AAAO;;AAAW;;AAAQ;;AAC1B;;AAA+E;AAAA;AAAA;;AAA/E;;AAA2G;;AAAI;;AAE/G;;AAAO;;AAAM;;AAAQ;;AACrB;;AAAiC;AAAA;AAAA;;AAC/B;;AAAsB;;AAAK;;AAC3B;;AAAwB;;AAAO;;AACjC;;AAAS;;AAAI;;AAEb;;AAAO;;AAAe;;AAAQ;;AAC9B;;AAAgC;AAAA;AAAA;;AAC5B;;AAAmB;;AAAG;;AACtB;;AAAmB;;AAAG;;AACtB;;AAAmB;;AAAG;;AACtB;;AAAmB;;AAAG;;AAC1B;;AAEA;;AAA+E;AAAA;AAAA;;AAA/E;;AAAqH;;AAAI;;AAEzH;;AAAO;;AAAe;;AAAQ;;AAC9B;;AAA4D;AAAA;AAAA;;AAA5D;;AAA+F;;AAAI;;AAEnG;;AAAO;;AAAO;;AAAQ;;AACtB;;AAA4E;AAAA;AAAA;;AAA5E;;AAAiH;;AAAI;;AAErH;;AAAO;;AAAU;;AAAQ;;AACzB;;AAA+E;AAAA;AAAA;;AAA/E;;AAAiH;;AAAI;;AAErH;;AAAO;;AAAkB;;AAAQ;;AACjC;;AAAkF;AAAA;AAAA;;AAAlF;;AAAmH;;AAAI;;AAEvH;;AAA6D;AAAA;AAAA;;AAA7D;;AAAyF;;AAAG;;AAAI;;AAChG;;AAA+D;AAAA;AAAA;;AAA/D;;AAA0F;;AAAG;;AAAM;;AAAK;;AAAI;;AAE5G;;AAAkC;AAAA,mBAAW,IAAAI,QAAA,EAAX;AAAqB,WAArB;;AAAuB;;AAAmB;;AAAoB;;AAAO;;AAAS;;AAAI;;AACpH;;AAA8C;;AAAwB;;AAAqB;;AAAK;;AAAI;;AACxG;;AACF;;AACA;;;;AAxC2E;;AAAA;;AAGU;;AAAA;;AAG9C;;AAAA;;AAMD;;AAAA;;AAO+C;;AAAA;;AAGnB;;AAAA;;AAGgB;;AAAA;;AAGG;;AAAA;;AAGG;;AAAA;;AAErB;;AAAA;;AACE;;AAAA;;;;;;;;;sED9BxDJ,e,EAAe;cAL3B,uDAK2B;eALjB;AACT7H,kBAAQ,EAAE,YADD;AAETC,qBAAW,EAAE,yBAFJ;AAGTC,mBAAS,EAAE,CAAC,wBAAD;AAHF,S;AAKiB,Q;;;;;;;;;;;;;;;;;;;;;;;;AEV5B;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QASagI,mB;AASX,mCAAoB7F,KAApB,EAAmD/D,EAAnD,EAA2EC,MAA3E,EAA2F;AAAA;;AAAvE,aAAA8D,KAAA,GAAAA,KAAA;AAA+B,aAAA/D,EAAA,GAAAA,EAAA;AAAwB,aAAAC,MAAA,GAAAA,MAAA;AAAmB;;;;mCAEnF;AAAA;;AACP,eAAK8D,KAAL,CAAWC,aAAX,CAAyBnD,SAAzB,CAAmC,UAACC,IAAD,EAAU;AAAE,mBAAI,CAAC+I,MAAL,GAAcxI,IAAI,CAAC6C,KAAL,CAAWpD,IAAI,CAACqD,GAAL,CAAS,KAAT,CAAX,CAAd,EAA2C,OAAI,CAAC2F,QAAL,GAAgBzI,IAAI,CAAC6C,KAAL,CAAWpD,IAAI,CAACqD,GAAL,CAAS,MAAT,CAAX,CAA3D;AAAyF,WAAxI,EADO,CAEP;AACA;;AACApD,iBAAO,CAACC,GAAR,CAAY,KAAK6I,MAAjB,EAJO,CAMP;;AACA,cAAIjG,GAAG,GAAG;AACRmG,yBAAa,EAAE,KAAKD,QAAL,CAAc5C,UADrB;AAER8C,qBAAS,EAAE,KAAKF,QAAL,CAAchE;AAFjB,WAAV;;AAKE,eAAI,IAAIF,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAG,KAAKiE,MAAL,CAAYrD,WAAZ,CAAwBT,MAA3C,EAAmDH,CAAC,EAApD,EACA;AACI,gBAAG,KAAKiE,MAAL,CAAYrD,WAAZ,CAAwBZ,CAAxB,KAA8B,CAAjC,EACA;AACIhC,iBAAG,CAACoG,SAAJ,CAAcpE,CAAd,EAAiBqE,MAAjB,GAA0B,cAA1B;AACH,aAHD,MAIK,IAAG,KAAKJ,MAAL,CAAYrD,WAAZ,CAAwBZ,CAAxB,KAA8B,CAAjC,EACL;AACIhC,iBAAG,CAACoG,SAAJ,CAAcpE,CAAd,EAAiBqE,MAAjB,GAA0B,cAA1B;AACH;AACJ;;AAED,eAAKC,aAAL,GAAqBtG,GAArB;AACL;;;qCAES;AAIN,cAAIuG,KAAJ;AACA,cAAIC,CAAC,GAAG,KAAKP,MAAL,CAAYrD,WAAZ,CAAwBT,MAAhC;AACA,cAAIsE,KAAK,GAAG,CAAZ;AAAA,cAAef,UAAf;AAAA,cAA2BD,KAA3B;;AAEA,eAAI,IAAIzD,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGwE,CAAnB,EAAsBxE,CAAC,EAAvB,EACA;AACI,gBAAG,KAAKiE,MAAL,CAAYrD,WAAZ,CAAwBZ,CAAxB,KAA8B,CAAjC,EACA;AACIyE,mBAAK;AACR;AACJ;;AACDhB,eAAK,GAAGgB,KAAR;AACAtJ,iBAAO,CAACC,GAAR,CAAYqI,KAAZ;AACAC,oBAAU,GAAID,KAAK,GAACe,CAAP,GAAU,GAAvB;AACArJ,iBAAO,CAACC,GAAR,CAAYsI,UAAZ;;AACA,cAAGA,UAAU,IAAE,EAAf,EAAkB;AAChBa,iBAAK,GAAC,CAAN;AACD,WAFD,MAGI;AACFA,iBAAK,GAAC,CAAN;AAED;;AACD,eAAKG,EAAL,GAAQjB,KAAR;AACA,eAAKkB,IAAL,GAAUjB,UAAV;AAEA,eAAKkB,EAAL,GAAQL,KAAR;AACA,cAAIM,IAAJ;;AACA,cAAGN,KAAK,IAAE,CAAV,EAAY;AACRM,gBAAI,GAAC,MAAL;AACH,WAFD,MAGI;AACAA,gBAAI,GAAC,MAAL;AACH;;AAGD,cAAIC,KAAK,GAAG,IAAIC,IAAJ,EAAZ;AACA,cAAIpE,CAAC,GAAG;AAACsB,iBAAK,EAACnD,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAP;AAAqC0E,iBAAK,EAAE,KAAKiB,EAAjD;AAAqDM,mBAAO,EAAC,KAAKL,IAAlE;AAAwE9D,eAAG,EAACgE,IAA5E;AAAkFI,gBAAI,EAACH;AAAvF,WAAR;AAEA3J,iBAAO,CAACC,GAAR,CAAYuF,CAAZ;AACA,eAAKvG,EAAL,CAAQ8K,YAAR,CAAqBvE,CAArB,EAAwB1F,SAAxB,CAAkC,UAACC,IAAD,EAAU;AAC1C,gBAAGA,IAAI,CAACoB,MAAL,IAAe,IAAlB,EACA;AACEnB,qBAAO,CAACC,GAAR,CAAY,gDAAZ;AACD,aAHD,MAKA;AACED,qBAAO,CAACC,GAAR,CAAY,kDAAZ;AACD;AACF,WATD;AAUA,eAAKf,MAAL,CAAYiB,QAAZ,CAAqB,CAAC,eAAD,CAArB,EAAwC;AAAEC,uBAAW,EAAE;AAAC4J,kBAAI,EAAE,KAAKT,EAAZ;AAAgBU,iBAAG,EAAC,KAAKT,IAAzB;AAA+BE,kBAAI,EAAC,KAAKD;AAAzC;AAAf,WAAxC,EArDM,CAuDN;;AACAzJ,iBAAO,CAACC,GAAR,CAAY,KAAKkJ,aAAjB;AAEA,eAAKlK,EAAL,CAAQiL,YAAR,CAAqB,KAAKf,aAA1B,EAAyCrJ,SAAzC,CAAmD,UAACC,IAAD,EAAU;AACzD,gBAAGA,IAAI,CAACoB,MAAL,IAAe,IAAlB,EACA;AACInB,qBAAO,CAACC,GAAR,CAAY,gCAAZ;AACH,aAHD,MAIK,IAAGF,IAAI,CAACoB,MAAL,IAAe,QAAlB,EACL;AACInB,qBAAO,CAACC,GAAR,CAAY,4DAAZ;AACH;AACJ,WATD;AAWH;;;;;;;uBA3GU4I,mB,EAAmB,+H,EAAA,0H,EAAA,uH;AAAA,K;;;YAAnBA,mB;AAAmB,qC;AAAA,e;AAAA,a;AAAA,6N;AAAA;AAAA;ACPhC;;AACI;;AACE;;AAAsB;;AAAgB;;AACtC;;AAEC;;AAEG;;AACA;;AACJ;;AAEA;;AACA;;AACA;;AACI;;AACJ;;AAEF;;AACF;;AAEI;;AACI;;AACI;;AAGR;;AACA;;AACF;;AAA4C;AAAA,mBAAS,IAAAsB,UAAA,EAAT;AAAqB,WAArB;;AAAsC;;AAAW;;AAC7F;;AACF;;AAEA;;AAEA;;AACA;;AACA;;AACF;;AACE;;AACF;;AAlBM;;;;;;;;;sEDbOtB,mB,EAAmB;cAL/B,uDAK+B;eALrB;AACTlI,kBAAQ,EAAE,gBADD;AAETC,qBAAW,EAAE,6BAFJ;AAGTC,mBAAS,EAAE,CAAC,4BAAD;AAHF,S;AAKqB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;AEThC;AAAA;;;AAAA;AAAA;AAAA,O,CAAA;AACA;AACA;;;AAEO,QAAMuJ,WAAW,GAAG;AACzBC,gBAAU,EAAE;AADa,KAApB;AAIP;;;;;;;AAOA;;;;;;;;;;;;;;;;;ACfA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAMA,QAAI,sEAAYA,UAAhB,EAA4B;AAC1B;AACD;;AAED,gFAAyBC,eAAzB,CAAyC,yDAAzC,WACS,UAAAC,GAAG;AAAA,aAAIvK,OAAO,CAACwK,KAAR,CAAcD,GAAd,CAAJ;AAAA,KADZ","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\r\nimport { addcourseinfo } from '../model/form.model';\r\nimport { DataService } from '../data.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-addcourse',\r\n  templateUrl: './addcourse.component.html',\r\n  styleUrls: ['./addcourse.component.css']\r\n})\r\nexport class AddcourseComponent implements OnInit {\r\n\r\n  addcourse_ob = new addcourseinfo();\r\n  banner: any;\r\n  received_data;\r\n\r\n  constructor(private ds: DataService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  //assigning the file to banner property created here only\r\n  get_file(evnt: any) \r\n  {\r\n     this.banner = evnt.target.files[0];\r\n  }\r\n\r\n  //Function to add\r\n  add_course()\r\n  {\r\n    const coursedata = new FormData();\r\n    coursedata.set('banner', this.banner);\r\n    coursedata.set('category', this.addcourse_ob.category);\r\n    coursedata.set('coursename', this.addcourse_ob.courseName);\r\n  \r\n    this.ds.AddCourseData(coursedata).subscribe((data) => {\r\n      if(data.category != \"not defined\")\r\n      {\r\n        console.log(data);\r\n        this.received_data = data;\r\n        console.log(\"Course Add SuccessFully !\");\r\n        this.router.navigate(['dashboardadmin'], {queryParams: { courseinfo: JSON.stringify(this.received_data) }});\r\n      }\r\n      else\r\n      {\r\n        alert(\"Error adding the course !\");\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid bg\">\r\n    <div class=\"row \">\r\n        <div class=\"col-md-4 col-sm-4 col-xs-12\"></div>\r\n        <div class=\"col-md-4 col-sm-4 col-xs-12\">\r\n            <!--form start-->\r\n            <form class=\"form\" #formaddcorse = \"ngForm\">\r\n                <h1>ADD Course</h1>\r\n                <div class=\"form-group\">\r\n                    <label>Select Category</label>\r\n                    <select class=\"form-control\" id=\"selectcrs\" name=\"category\" [(ngModel)] = \"addcourse_ob.category\">\r\n                      <option>C1</option>\r\n                      <option>C2</option>>\r\n                    </select>\r\n                  </div>\r\n            \r\n                \r\n\r\n                    <div class=\"form-group\">\r\n                        <label for=\"crname\">Course Name</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"crname\" placeholder=\"Course name\" name=\"courseName\" [(ngModel)] = \"addcourse_ob.courseName\">\r\n                      </div>\r\n\r\n                         \r\n                            <div class=\"form-group\">\r\n                              <label for=\"img\">Banner image</label>\r\n                              <input type=\"file\" class=\"form-control\" id=\"img\" placeholder=\"open\" (change) = \"get_file($event)\">\r\n                            </div>\r\n                              <br>\r\n                    <button type=\"submit\" class=\"btn btn-success\" (click) = \"add_course()\" >+ ADD</button>\r\n                    \r\n                    <button type=\"clear\" class=\"btn btn-danger\" style=\"margin-left:10px;\"> Clear</button>\r\n                  </form>\r\n            <!--form end-->\r\n        </div>\r\n        <div class=\"col-md-4 col-sm-4 col-xs-12\"></div>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { addquestioninfo } from '../model/form.model';\r\nimport { DataService } from '../data.service';\r\n\r\n@Component({\r\n  selector: 'app-addquestion',\r\n  templateUrl: './addquestion.component.html',\r\n  styleUrls: ['./addquestion.component.css']\r\n})\r\nexport class AddquestionComponent implements OnInit {\r\n\r\n  addques_ob = new addquestioninfo();\r\n  course_ob;\r\n\r\n  constructor(private ds: DataService) { } \r\n\r\n  ngOnInit() {\r\n    this.ds.getcourseforquestion().subscribe((data) => {\r\n        this.course_ob = data;\r\n    })\r\n  }\r\n\r\n  add_question()\r\n  {\r\n    this.ds.AddQuestion(this.addques_ob).subscribe((data) => {\r\n      if(data.status == \"ok\")\r\n      {\r\n        console.log(\"Question Added Succesfully to the DataBase !\");\r\n      }\r\n      else\r\n      {\r\n        alert(\"Question Uploading Failed. Contact Your Admin.\");\r\n      }\r\n    })\r\n  }\r\n\r\n}\r\n","<div class=\"container-fluid bg\">\r\n    <div class=\"row \">\r\n        <div class=\"col-md-4 col-sm-4 col-xs-12\"></div>\r\n        <div class=\"col-md-4 col-sm-4 col-xs-12\">\r\n            <!--form start-->\r\n            <form class=\"form\" #formaddquestion = \"ngForm\">\r\n                <h1>ADD Question</h1>\r\n                <div class=\"form-group\">\r\n                    <label for=\"selectcrs\">Select Course</label>\r\n                    <select class=\"form-control\" id=\"selectcrs\" name=\"courseselected\" [(ngModel)] = \"addques_ob.courseselected\">\r\n                      <option *ngFor = \"let p of course_ob\"> {{ p.coursename }} </option>\r\n                    </select> \r\n                  </div>\r\n                  <div class=\"form-group\">\r\n                    <label for=\"quesnum\">Question Number</label>\r\n                    <input type=\"number\" class=\"form-control\" id=\"ques\" name=\"qno\" [(ngModel)] = \"addques_ob.qno\">\r\n                  </div>\r\n\r\n                  <div class=\"form-group\">\r\n<label for=\"ques\">Question</label>\r\n<textarea class=\"form-control\" id=\"ques\" rows=\"2\" name=\"question\" [(ngModel)] = \"addques_ob.question\"></textarea>\r\n</div>\r\n              \r\n\r\n                    <div class=\"form-group\">\r\n                        <label for=\"opt1\">Option A</label>\r\n                        <input type=\"text\" class=\"form-control\" id=\"opt1\" placeholder=\"option A\" name=\"a\" [(ngModel)] = \"addques_ob.a\">\r\n                      </div>\r\n\r\n                          <div class=\"form-group\">\r\n                              <label for=\"opt4\">Option B</label>\r\n                              <input type=\"text\" class=\"form-control\" id=\"opt4\" placeholder=\"Option B\" name=\"b\" [(ngModel)] = \"addques_ob.b\">\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                              <label for=\"opt4\">Option C</label>\r\n                              <input type=\"text\" class=\"form-control\" id=\"opt4\" placeholder=\"Option C\" name=\"c\" [(ngModel)] = \"addques_ob.c\">\r\n                            </div>\r\n                            <div class=\"form-group\">\r\n                              <label for=\"opt4\">Option D</label>\r\n                              <input type=\"text\" class=\"form-control\" id=\"opt4\" placeholder=\"Option D\" name=\"d\" [(ngModel)] = \"addques_ob.d\">\r\n                            </div>\r\n                              <br>\r\n\r\n                              <div class=\"form-group\">\r\n                                  <label for=\"cropt\">Correct Option</label>\r\n                                  <input type=\"text\" class=\"form-control\" style=\"border-color: green;\" id=\"cropt\" placeholder=\"correct answer\" name=\"correct\" [(ngModel)] = \"addques_ob.correct\">\r\n                                </div>\r\n\r\n                    <button type=\"submit\" class=\"btn btn-success\" (click) = \"add_question()\">+ ADD</button>\r\n                    \r\n                    <button type=\"button\" class=\"btn btn-danger\" style=\"margin-left:10px;\" ng-click=\"reset_input()\"> Clear</button>\r\n                  </form>\r\n            <!--form end-->\r\n        </div>\r\n        <div class=\"col-md-4 col-sm-4 col-xs-12\"></div>\r\n    </div>\r\n</div>","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { DashAdContentComponent } from './dash-ad-content/dash-ad-content.component';\r\nimport { DashboardadminComponent } from './dashboardadmin/dashboardadmin.component';\r\nimport { AddcourseComponent } from './addcourse/addcourse.component';\r\nimport { AddquestionComponent } from './addquestion/addquestion.component';\r\nimport { ExampageComponent } from './exampage/exampage.component';\r\nimport { InstructionsComponent } from './instructions/instructions.component';\r\nimport { SubmitexamComponent } from './submitexam/submitexam.component';\r\nimport { ShowresultComponent } from './showresult/showresult.component';\r\nimport { ResultstudentsComponent } from './resultstudents/resultstudents.component';\r\n\r\nconst routes: Routes = [{ path: '', component: HomeComponent },\r\n                        { path: 'login', component: LoginComponent },                                                \r\n                        { path: 'signup', component: SignupComponent },\r\n\r\n                        //children routes forstudent dashboard\r\n                        { path: 'dashboard', component: DashboardComponent,children:[{path:'',component:DashAdContentComponent},\r\n                                                                                      {path: 'history',component:ResultstudentsComponent},\r\n                                                                                      {path:'dashadcontent',component:DashAdContentComponent}]},\r\n                        { path: 'signup/home', component: HomeComponent },\r\n                        { path: 'login/signup', component: SignupComponent },\r\n                        // { path: 'dashboardadmin/', component: DashAdContentComponent },\r\n                        //added children routes for admin dashboard contents\r\n                        { path: 'dashboardadmin', component: DashboardadminComponent,children:[{path:'',component:DashAdContentComponent},\r\n                                                                                              {path:'dashadcontent',component:DashAdContentComponent}, \r\n                                                                                               { path: 'addcourse', component: AddcourseComponent },\r\n                                                                                               { path: 'history',component:ResultstudentsComponent},\r\n                                                                                               { path: 'addquestion', component: AddquestionComponent },\r\n                                                                                               { path: 'quiz', component: ExampageComponent }]},\r\n                        { path: 'instruction', component: InstructionsComponent },\r\n                        //added the path for exam component becase when in instruction path is instruction/ now from here you are going to some other component\r\n                        //but if you don't want to do that please create a new comp as children of instruction\r\n                        { path: 'exam', component: ExampageComponent },\r\n                        { path: 'submit', component: SubmitexamComponent ,children:[{path:'showre', component:ShowresultComponent}] },\r\n                        \r\n                        // { path: 'addcourse', component: AddcourseComponent },\r\n                        // { path: 'addquestion', component: AddquestionComponent }\r\n                      ]\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'online-quiz-system';\r\n}\r\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { HttpClientModule ,HttpClient } from '@angular/common/http';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { DashAdContentComponent } from './dash-ad-content/dash-ad-content.component';\r\nimport { AddcourseComponent } from './addcourse/addcourse.component';\r\nimport { AddquestionComponent } from './addquestion/addquestion.component';\r\nimport { DashboardadminComponent } from './dashboardadmin/dashboardadmin.component';\r\nimport { ExampageComponent } from './exampage/exampage.component';\r\nimport { InstructionsComponent } from './instructions/instructions.component';\r\nimport { SubmitexamComponent } from './submitexam/submitexam.component';\r\nimport { ShowresultComponent } from './showresult/showresult.component';\r\nimport { ResultstudentsComponent } from './resultstudents/resultstudents.component';\r\nimport { SocialLoginModule, AuthServiceConfig } from \"angularx-social-login\";\r\nimport { GoogleLoginProvider, FacebookLoginProvider } from \"angularx-social-login\";\r\n\r\n//Get client ID from google and facebook \r\nlet google_client_ID : string = \"574857836985-p92fk9vuhlrpngfo8587ot7v236deg08.apps.googleusercontent.com\";\r\nlet facebook_client_ID : string = \"619214815604389\";\r\n\r\nlet config = new AuthServiceConfig([\r\n  {\r\n    id: GoogleLoginProvider.PROVIDER_ID,\r\n    provider: new GoogleLoginProvider(google_client_ID)\r\n  },\r\n  {\r\n    id: FacebookLoginProvider.PROVIDER_ID,\r\n    provider: new FacebookLoginProvider(facebook_client_ID)\r\n  }\r\n]);\r\n \r\nexport function provideConfig() {\r\n  return config;\r\n}\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HomeComponent,\r\n    LoginComponent,\r\n    SignupComponent,\r\n    DashboardComponent,\r\n    DashboardadminComponent,\r\n    DashAdContentComponent,\r\n    AddcourseComponent,\r\n    AddquestionComponent,\r\n    DashboardadminComponent,\r\n    ExampageComponent,\r\n    InstructionsComponent,\r\n    SubmitexamComponent,\r\n    ShowresultComponent,\r\n    ResultstudentsComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    SocialLoginModule\r\n  ],\r\n  providers: [\r\n    {\r\n      provide: AuthServiceConfig,\r\n      useFactory: provideConfig\r\n  }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../data.service';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-dash-ad-content',\r\n  templateUrl: './dash-ad-content.component.html',\r\n  styleUrls: ['./dash-ad-content.component.css']\r\n})\r\nexport class DashAdContentComponent implements OnInit {\r\n  getobj;\r\n  getspecificobj;\r\n\r\n  constructor(private ds:DataService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n\r\n    //this is storing the data that we got in the data service to getobj\r\n    this.ds.getallcourse().subscribe((data)=>{this.getobj = data;});\r\n    // console.log(this.getobj)\r\n    // this.getspecificobj=this.getobj;\r\n    // console.log(this.getobj.coursename);\r\n    // this.ds.getspecificcourse(this.getobj).subscribe((data) => {this.getspecificobj = data;});\r\n  }\r\n\r\n  rules(obj)\r\n  {\r\n      console.log(\"Hello \" + obj);\r\n      // var p = { courseid: obj };\r\n      this.router.navigate(['instruction'], { queryParams: { quizdetails: obj }});\r\n      //console.log(p);\r\n  } \r\n\r\n}\r\n","<div class=\"container\" style=\"background-color: transparent; margin-left:20%;\">\r\n    <h3 style=\"text-align: center;\">Web-dev quizes</h3>\r\n    <br>\r\n    \r\n    <div class=\"row\">\r\n    <!-- <p>{{getobj}}</p> -->\r\n    <div class=\" col-md-3\" data-toggle=\"modal\" data-target=\".html_quiz\" *ngFor = 'let p of getobj' style=\"margin-top:1%;\" (click) = \"rules(p.coursename)\" >\r\n      <div class=\"rounded imgp\" style=\"display:inline-block;height:210px;\">\r\n      <img src=\"http://localhost:3000/{{p._id}}.jpg\" class=\"card-img-top\" alt=\"...\">\r\n        <p class=\"card-text\" style=\"text-align: center; font-size: 20px;\">{{p.coursename}}</p>\r\n      </div>\r\n    </div> \r\n\r\n    </div>\r\n</div>\r\n\r\n<br><br>\r\n\r\n<div class=\"container\" style=\"background-color: transparent; margin-left:20%;\">\r\n  <h3 style=\"text-align: center;\">Genral Quiz</h3>\r\n  <br>\r\n  \r\n  <div class=\"row\">\r\n  <!-- <p>{{getobj}}</p> -->\r\n  <div class=\" col-md-3\" data-toggle=\"modal\" data-target=\".html_quiz\" *ngFor = 'let p of getobj' style=\"margin-top:1%;\" (click) = \"rules(p.coursename)\" >\r\n    <div class=\"rounded imgp\" style=\"display:inline-block;height:210px;\">\r\n    <img src=\"http://localhost:3000/{{p._id}}.jpg\" class=\"card-img-top\" alt=\"...\">\r\n      <p class=\"card-text\" style=\"text-align: center; font-size: 20px;\">{{p.coursename}}</p>\r\n    </div>\r\n  </div> \r\n\r\n  </div>\r\n</div>\r\n     \r\n    \r\n    <!-- <div class=\"col-md-3\" data-toggle=\"modal\" data-target=\".js_quiz\" >\r\n          <div class=\"rounded imgp\">\r\n          \r\n          <img src=\"../../assets/Carrier Guide/coding.jpg\" class=\"card-img-top\" alt=\"...\">\r\n          &nbsp;\r\n          \r\n            <p class=\"card-text\" style=\"text-align: center; font-size: 20px;\">Javascript</p>\r\n          </div>\r\n        </div> -->\r\n    \r\n        \r\n    \r\n        <!-- <div class=\"col-md-3\" data-toggle=\"modal\" data-target=\".database_quiz\">\r\n              <div class=\"rounded imgp\">\r\n              <img src=\"../../assets/Carrier Guide/coding.jpg\" class=\"card-img-top\" alt=\"...\">\r\n              &nbsp;\r\n          \r\n            <p class=\"card-text\" style=\"text-align: center; font-size: 20px;\">Database</p>\r\n              </div>\r\n            </div> -->\r\n    \r\n            \r\n    \r\n            <!-- <div class=\"col-md-3\" data-toggle=\"modal\" data-target=\".ds_quiz\">\r\n                  <div class=\"rounded imgp\">\r\n                  <img src=\"../../assets/Carrier Guide/coding.jpg\" class=\"card-img-top\" alt=\"...\">\r\n                  &nbsp;\r\n          \r\n                  <p class=\"card-text\" style=\"text-align: center; font-size: 20px;\">Data-structures</p>\r\n                  </div>\r\n                </div>\r\n    \r\n    \r\n              </div> -->\r\n    \r\n             \r\n\r\n\r\n\r\n\r\n<!-- \r\n              <br>\r\n              <br>\r\n              \r\n              \r\n              <div class=\"container-fluid\" style=\"background-color: transparent;\">\r\n              <h3 style=\"text-align: center;\">General quizes</h3>\r\n              <br>\r\n              \r\n              <div class=\"row\">\r\n              \r\n              <div class=\" col-md-4\" data-toggle=\"modal\" data-target=\".lg_quiz\" >\r\n                <div class=\"rounded imgp\">\r\n                <img src=\"../../assets/Carrier Guide/coding.jpg\" class=\"card-img-top\" alt=\"...\">\r\n                &nbsp;\r\n                    \r\n                            <p class=\"card-text\" style=\"text-align: center; font-size: 20px;\">Logical Reasoning</p>\r\n                </div>\r\n              </div>\r\n              \r\n              \r\n              <div class=\"col-md-4\" data-toggle=\"modal\" data-target=\".an_quiz\" >\r\n                    <div class=\"rounded imgp\">\r\n                    \r\n                    <img src=\"../../assets/Carrier Guide/coding.jpg\" class=\"card-img-top\" alt=\"...\">\r\n                    &nbsp;\r\n                    \r\n                    <p class=\"card-text\" style=\"text-align: center; font-size: 20px;\">Analytical Reasoning</p>\r\n                    </div>\r\n                  </div>\r\n              \r\n                  \r\n              \r\n                  <div class=\"col-md-4\" data-toggle=\"modal\" data-target=\".quants_quiz\">\r\n                        <div class=\"rounded imgp\">\r\n                        <img src=\"../../assets/Carrier Guide/coding.jpg\" class=\"card-img-top\" alt=\"...\">\r\n                        &nbsp;\r\n                    \r\n                            <p class=\"card-text\" style=\"text-align: center; font-size: 20px;\">Quants</p>\r\n                        </div>\r\n                      </div>\r\n              \r\n              \r\n                        </div>\r\n              \r\n                        </div>\r\n              \r\n              -->\r\n      ","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { DataService } from '../data.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  //local objectc to store all the data sent from the signup component through the queryParams parameter\r\n  stuinfo_dashboard;\r\n\r\n  //property route of type ActivatedRoute to receive the data sent from the signup component\r\n  constructor(private route: ActivatedRoute, private ds?: DataService) { }\r\n\r\n  ngOnInit() {\r\n\r\n    // receive the data sent from the signup component through queryparam in navigate\r\n    \r\n    //queryParamMap is used to receive the data sent from any component\r\n    this.route.queryParamMap.subscribe((data) => {\r\n\r\n      //JSON.parse is used to convert the received string again into JSON object\r\n      this.stuinfo_dashboard = JSON.parse(data.get('stuinfo_signup'));\r\n\r\n      //just to check if stu info is stored successfully in the object\r\n      console.log(this.stuinfo_dashboard);\r\n\r\n    }) \r\n    \r\n\r\n\r\n  }\r\n\r\n  openNav() {\r\n    document.getElementById(\"mySidenav\").style.width = \"250px\";\r\n  }\r\n  \r\n  closeNav() {\r\n    document.getElementById(\"mySidenav\").style.width = \"0\";\r\n  }\r\n\r\n}\r\n","<!-- navbar bootstrap -->\r\n\r\n<nav class=\"navbar navbar-expand-lg bg_nav navbar-dark fixed-top\">\r\n  <a class=\"navbar-brand\" href=\"#\">Hello {{stuinfo_dashboard.lname}} Ji</a>\r\n\r\n  &nbsp;\r\n  \r\n  <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo01\" aria-controls=\"navbarTogglerDemo01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n    <span class=\"navbar-toggler-icon\"></span>\r\n  </button>\r\n  <div class=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\r\n    <!-- <a class=\"navbar-brand\" href=\"#\">Hidden brand</a> -->\r\n    <ul class=\"navbar-nav mr-auto mt-2 mt-lg-0 hov\" style=\"border:1px solid white; border-radius:4px; text-align: center;\">\r\n          <li class=\"nav-item active \">\r\n            <a class=\"nav-link\" href=\"#\">About<span class=\"sr-only\">(current)</span></a>\r\n          </li>\r\n    </ul>\r\n\r\n    <ul class=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n          <!-- <li class=\"nav-item\">\r\n            <a class=\"nav-link btn btn-outline-success\" href=\"#\">Login</a>\r\n          </li>\r\n          &nbsp; -->\r\n          <!-- <li class=\"nav-item\">\r\n            <a class=\"nav-link btn btn-outline-danger\" style=\"color: white; \"href=\"#\" >Sign Out</a>\r\n          </li> -->\r\n        </ul>\r\n\r\n\r\n        \r\n\r\n    <form class=\"form-inline my-2 my-lg-0\">\r\n      \r\n        <a class=\"nav-link btn btn-outline-danger\" style=\"color: white; \"href=\"#\" >Sign Out</a>\r\n      \r\n      <!-- <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\r\n         \r\n            <button class=\"btn btn-outline-secondary my-2 my-sm-0\" type=\"submit\" style=\"color:white; border-color:white;\">Search</button> -->\r\n        </form>\r\n\r\n        \r\n\r\n\r\n        <div id=\"mySidenav\" class=\"sidenav\">\r\n              <!-- <a href=\"javascript:void(0)\" class=\"closebtn\" onclick=\"closeNav()\">&times;</a> -->\r\n      \r\n              <div class=\"pimg\">\r\n                  <img class=\"prof\" src=\"../../assets/images/icon/avatar-02.jpg\" alt=\"jhon\">\r\n                  \r\n                  <h4 style=\"margin-left: 50px;\">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Name</h4>\r\n                  <hr>\r\n                  \r\n              </div>\r\n              <a href=\"#\">  <i style=\"font-size:20px\" class=\"fa\" >&#xf0e4;&nbsp;&nbsp; Dashboard</i></a>\r\n              <a href=\"#\"> <i class=\"fa fa-money\" style=\"font-size:20px\">&nbsp;&nbsp;Subscriptions</i></a>\r\n              <a routerLink=\"history\"><i class=\"fa fa-history\" style=\"font-size:20px\">&nbsp;&nbsp;History</i></a>\r\n              <a href=\"#\"><i class=\"fa fa-globe\" style=\"font-size:20px\">&nbsp;&nbsp;Global Rank</i></a>\r\n            </div>\r\n            &nbsp;\r\n            &nbsp;\r\n            <a class=\"nav-link btn btn-outline-secondary\" onclick=\"openNav()\" style=\"color:white; border-color:white;\"><i style=\"font-size:20px\" class=\"fa\">&#xf2be;&nbsp;</i>Profile</a>\r\n            <!-- <button class=\"btn btn-outline-light my-2 my-sm-0\" onclick=\"openNav()\"><i style=\"font-size:20px\" class=\"fa\">&#xf2be;&nbsp;</i>Search</button> -->\r\n\r\n\r\n                                         \r\n\r\n\r\n            <!-- <span style=\"font-size:30px;cursor:pointer\" onclick=\"openNav()\">&nbsp;&nbsp;&#9776;</span> -->\r\n            \r\n      \r\n\r\n\r\n      \r\n      \r\n    \r\n  </div>\r\n</nav>\r\n\r\n\r\n\r\n          \r\n      \r\n\r\n\r\n<router-outlet style=\"margin-left:25%;\" ></router-outlet>\r\n\r\n<!-- the jumbotron for some other links and feed back-->\r\n\r\n<div style=\"margin-left:20%;\" >\r\n      <div class=\"container\">\r\n<div class=\"col-md-6\"></div>\r\n<div class=\"col-md-6\">\r\n\r\n</div>\r\n      </div>\r\n    </div>\r\n\r\n\r\n<footer style=\"margin-left:20%;\">\r\n<p style=\"text-align: center\">copyright &copy; Quizio - 2019</p>\r\n  </footer>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<div class=\"modal fade database_quiz\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\r\n<div class=\"modal-dialog modal-lg\">\r\n<div class=\"modal-content\">\r\n\r\n    <div class=\"card text-center\">\r\n            <div class=\"card-header\">\r\n                   Database Quiz\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title\">Rules</h5>\r\n              <p class=\"card-text\"><ul>\r\n                <li>Be honest: Test taker statements are to be true and accurate. Two ways\r\n                     in which some individuals attempt to gain an unfair advantage are lying in \r\n                     order to obtain an accommodation, such as being granted extra time to take the test, \r\n                     and employing an imposter who takes the test in their behalf.</li>\r\n\r\n\r\n                <li>\r\n                        Be fair: The test-taking environment is to be the same, as much as it is possible, for all test takers.\r\n                         An exception to this rule is made for those who require an accommodation, such as reading or answer-responding assistance. \r\n                         All test takers have access to a uniform set of test material.\r\n                         Electronic devices with memories that allow for the smuggling of information useful in taking the test are specifically prohibited.\r\n                </li>\r\n\r\n                <li>\r\n                        Behave appropriately: The testing event is to remain free from disruptions and distractions. \r\n                        This allows test takers the opportunity to perform their best in a fair and equitable manner.\r\n                         Test takers who create distractions may be subject to discipline. Except for medical reasons, \r\n                         test takers may not bring food, liquids or other items into the test administration area.\r\n                </li>\r\n              </ul>\r\n              <a href=\"#\" class=\"btn btn-success\">Start Quiz</a>\r\n            </div>\r\n            <div class=\"card-footer text-muted\">\r\n              Time provided - 2hrs\r\n            </div>\r\n          </div>\r\n</div>\r\n</div>\r\n</div>\r\n\r\n\r\n<div class=\"modal fade js_quiz\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\r\n<div class=\"modal-dialog modal-lg\">\r\n<div class=\"modal-content\">\r\n\r\n    <div class=\"card text-center\">\r\n            <div class=\"card-header\">\r\n                   Javascript Quiz\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title\">Rules</h5>\r\n              <p class=\"card-text\"><ul>\r\n                <li>Be honest: Test taker statements are to be true and accurate. Two ways\r\n                     in which some individuals attempt to gain an unfair advantage are lying in \r\n                     order to obtain an accommodation, such as being granted extra time to take the test, \r\n                     and employing an imposter who takes the test in their behalf.</li>\r\n\r\n\r\n                <li>\r\n                        Be fair: The test-taking environment is to be the same, as much as it is possible, for all test takers.\r\n                         An exception to this rule is made for those who require an accommodation, such as reading or answer-responding assistance. \r\n                         All test takers have access to a uniform set of test material.\r\n                         Electronic devices with memories that allow for the smuggling of information useful in taking the test are specifically prohibited.\r\n                </li>\r\n\r\n                <li>\r\n                        Behave appropriately: The testing event is to remain free from disruptions and distractions. \r\n                        This allows test takers the opportunity to perform their best in a fair and equitable manner.\r\n                         Test takers who create distractions may be subject to discipline. Except for medical reasons, \r\n                         test takers may not bring food, liquids or other items into the test administration area.\r\n                </li>\r\n              </ul>\r\n              <a href=\"#\" class=\"btn btn-success\">Start Quiz</a>\r\n            </div>\r\n            <div class=\"card-footer text-muted\">\r\n              Time provided - 2hrs\r\n            </div>\r\n          </div>\r\n</div>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n<div class=\"modal fade ds_quiz\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\r\n<div class=\"modal-dialog modal-lg\">\r\n<div class=\"modal-content\">\r\n\r\n    <div class=\"card text-center\">\r\n            <div class=\"card-header\">\r\n                   Data-Structures Quiz\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title\">Rules</h5>\r\n              <p class=\"card-text\"><ul>\r\n                <li>Be honest: Test taker statements are to be true and accurate. Two ways\r\n                     in which some individuals attempt to gain an unfair advantage are lying in \r\n                     order to obtain an accommodation, such as being granted extra time to take the test, \r\n                     and employing an imposter who takes the test in their behalf.</li>\r\n\r\n\r\n                <li>\r\n                        Be fair: The test-taking environment is to be the same, as much as it is possible, for all test takers.\r\n                         An exception to this rule is made for those who require an accommodation, such as reading or answer-responding assistance. \r\n                         All test takers have access to a uniform set of test material.\r\n                         Electronic devices with memories that allow for the smuggling of information useful in taking the test are specifically prohibited.\r\n                </li>\r\n\r\n                <li>\r\n                        Behave appropriately: The testing event is to remain free from disruptions and distractions. \r\n                        This allows test takers the opportunity to perform their best in a fair and equitable manner.\r\n                         Test takers who create distractions may be subject to discipline. Except for medical reasons, \r\n                         test takers may not bring food, liquids or other items into the test administration area.\r\n                </li>\r\n              </ul>\r\n              <a href=\"#\" class=\"btn btn-success\">Start Quiz</a>\r\n            </div>\r\n            <div class=\"card-footer text-muted\">\r\n              Time provided - 2hrs\r\n            </div>\r\n          </div>\r\n</div>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n\r\n<div class=\"modal fade lg_quiz\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\r\n<div class=\"modal-dialog modal-lg\">\r\n<div class=\"modal-content\">\r\n\r\n    <div class=\"card text-center\">\r\n            <div class=\"card-header\">\r\n                   Logical-Reasoning Quiz\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title\">Rules</h5>\r\n              <p class=\"card-text\"><ul>\r\n                <li>Be honest: Test taker statements are to be true and accurate. Two ways\r\n                     in which some individuals attempt to gain an unfair advantage are lying in \r\n                     order to obtain an accommodation, such as being granted extra time to take the test, \r\n                     and employing an imposter who takes the test in their behalf.</li>\r\n\r\n\r\n                <li>\r\n                        Be fair: The test-taking environment is to be the same, as much as it is possible, for all test takers.\r\n                         An exception to this rule is made for those who require an accommodation, such as reading or answer-responding assistance. \r\n                         All test takers have access to a uniform set of test material.\r\n                         Electronic devices with memories that allow for the smuggling of information useful in taking the test are specifically prohibited.\r\n                </li>\r\n\r\n                <li>\r\n                        Behave appropriately: The testing event is to remain free from disruptions and distractions. \r\n                        This allows test takers the opportunity to perform their best in a fair and equitable manner.\r\n                         Test takers who create distractions may be subject to discipline. Except for medical reasons, \r\n                         test takers may not bring food, liquids or other items into the test administration area.\r\n                </li>\r\n              </ul>\r\n              <a href=\"#\" class=\"btn btn-success\">Start Quiz</a>\r\n            </div>\r\n            <div class=\"card-footer text-muted\">\r\n              Time provided - 2hrs\r\n            </div>\r\n          </div>\r\n</div>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n\r\n<div class=\"modal fade an_quiz\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\r\n<div class=\"modal-dialog modal-lg\">\r\n<div class=\"modal-content\">\r\n\r\n    <div class=\"card text-center\">\r\n            <div class=\"card-header\">\r\n                   Analytical-Reasoning Quiz\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title\">Rules</h5>\r\n              <p class=\"card-text\"><ul>\r\n                <li>Be honest: Test taker statements are to be true and accurate. Two ways\r\n                     in which some individuals attempt to gain an unfair advantage are lying in \r\n                     order to obtain an accommodation, such as being granted extra time to take the test, \r\n                     and employing an imposter who takes the test in their behalf.</li>\r\n\r\n\r\n                <li>\r\n                        Be fair: The test-taking environment is to be the same, as much as it is possible, for all test takers.\r\n                         An exception to this rule is made for those who require an accommodation, such as reading or answer-responding assistance. \r\n                         All test takers have access to a uniform set of test material.\r\n                         Electronic devices with memories that allow for the smuggling of information useful in taking the test are specifically prohibited.\r\n                </li>\r\n\r\n                <li>\r\n                        Behave appropriately: The testing event is to remain free from disruptions and distractions. \r\n                        This allows test takers the opportunity to perform their best in a fair and equitable manner.\r\n                         Test takers who create distractions may be subject to discipline. Except for medical reasons, \r\n                         test takers may not bring food, liquids or other items into the test administration area.\r\n                </li>\r\n              </ul>\r\n              <a href=\"#\" class=\"btn btn-success\">Start Quiz</a>\r\n            </div>\r\n            <div class=\"card-footer text-muted\">\r\n              Time provided - 2hrs\r\n            </div>\r\n          </div>\r\n</div>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n\r\n<div class=\"modal fade quants_quiz\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\r\n<div class=\"modal-dialog modal-lg\">\r\n<div class=\"modal-content\">\r\n\r\n    <div class=\"card text-center\">\r\n            <div class=\"card-header\">\r\n                   Quants Quiz\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title\">Rules</h5>\r\n              <p class=\"card-text\"><ul>\r\n                <li>Be honest: Test taker statements are to be true and accurate. Two ways\r\n                     in which some individuals attempt to gain an unfair advantage are lying in \r\n                     order to obtain an accommodation, such as being granted extra time to take the test, \r\n                     and employing an imposter who takes the test in their behalf.</li>\r\n\r\n\r\n                <li>\r\n                        Be fair: The test-taking environment is to be the same, as much as it is possible, for all test takers.\r\n                         An exception to this rule is made for those who require an accommodation, such as reading or answer-responding assistance. \r\n                         All test takers have access to a uniform set of test material.\r\n                         Electronic devices with memories that allow for the smuggling of information useful in taking the test are specifically prohibited.\r\n                </li>\r\n\r\n                <li>\r\n                        Behave appropriately: The testing event is to remain free from disruptions and distractions. \r\n                        This allows test takers the opportunity to perform their best in a fair and equitable manner.\r\n                         Test takers who create distractions may be subject to discipline. Except for medical reasons, \r\n                         test takers may not bring food, liquids or other items into the test administration area.\r\n                </li>\r\n              </ul>\r\n              <a href=\"#\" class=\"btn btn-success\">Start Quiz</a>\r\n            </div>\r\n            <div class=\"card-footer text-muted\">\r\n              Time provided - 2hrs\r\n            </div>\r\n          </div>\r\n</div>\r\n</div>\r\n</div>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { DataService } from '../data.service';\r\n\r\n@Component({\r\n  selector: 'app-dashboardadmin',\r\n  templateUrl: './dashboardadmin.component.html',\r\n  styleUrls: ['./dashboardadmin.component.css']\r\n})\r\nexport class DashboardadminComponent implements OnInit {\r\n\r\n  crsinfo;\r\n  admin_info;\r\n  socialuserinfo = {\r\n    'userprofilepic' : localStorage.getItem('userpic'),\r\n    'userprofilename' : localStorage.getItem('userName')\r\n  }\r\n\r\n  constructor(private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() { \r\n\r\n    this.route.queryParamMap.subscribe((data) => {\r\n      this.admin_info = JSON.parse(data.get('stuinfo_signup'));\r\n      console.log(this.admin_info);\r\n    }\r\n  )}\r\n}\r\n","<!-- navbar bootstrap -->\r\n\r\n<nav class=\"navbar navbar-expand-lg bg_nav navbar-dark fixed-top\" style=\"z-index: 2\">\r\n    <a class=\"navbar-brand\" href=\"#\">Hello</a>\r\n  \r\n    &nbsp;\r\n    \r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarTogglerDemo01\" aria-controls=\"navbarTogglerDemo01\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div class=\"collapse navbar-collapse\" id=\"navbarTogglerDemo01\">\r\n      <!-- <a class=\"navbar-brand\" href=\"#\">Hidden brand</a> -->\r\n      <ul class=\"navbar-nav mr-auto mt-2 mt-lg-0 hov\" style=\"border:1px solid white; border-radius:4px; text-align: center;\">\r\n            <li class=\"nav-item active \">\r\n              <a class=\"nav-link\" href=\"#\">About<span class=\"sr-only\">(current)</span></a>\r\n            </li>\r\n      </ul>\r\n  \r\n      <ul class=\"navbar-nav mr-auto mt-2 mt-lg-0\">\r\n            <!-- <li class=\"nav-item\">\r\n              <a class=\"nav-link btn btn-outline-success\" href=\"#\">Login</a>\r\n            </li>\r\n            &nbsp; -->\r\n            <!-- <li class=\"nav-item\">\r\n              <a class=\"nav-link btn btn-outline-danger\" style=\"color: white; \"href=\"#\" >Sign Out</a>\r\n            </li> -->\r\n          </ul>\r\n  \r\n  \r\n          \r\n  \r\n      <form class=\"form-inline my-2 my-lg-0\">\r\n          <a class=\"nav-link btn btn-outline-danger\" style=\"color: white; \"href=\"#\" >Sign Out</a>\r\n        \r\n\r\n\r\n        <!-- <input class=\"form-control mr-sm-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\">\r\n            <button class=\"btn btn-outline-secondary my-2 my-sm-0\" type=\"submit\" style=\"color:white; border-color:white;\">Search</button> -->\r\n          </form>\r\n  \r\n          \r\n  \r\n  \r\n          <div id=\"mySidenav\" class=\"sidenav\">\r\n                <!-- <a href=\"javascript:void(0)\" class=\"closebtn\" onclick=\"closeNav()\">&times;</a> -->\r\n        \r\n                <div class=\"pimg\">\r\n                    <img class=\"prof\" [src]=\"socialuserinfo.userprofilepic\" alt=\"jhon\">\r\n                    \r\n                    <h4>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;{{socialuserinfo.userprofilename}}</h4>\r\n                    <hr>\r\n                    \r\n                </div>\r\n                <a routerLink=\"dashadcontent\">  <i style=\"font-size:20px\" class=\"fa\" >&#xf0e4;&nbsp;&nbsp; Dashboard</i></a>\r\n                <a routerLink=\"addcourse\"> <i class=\"fa fa-money\" style=\"font-size:20px\">&nbsp;&nbsp;Add-Course</i></a>\r\n                <a routerLink=\"addquestion\"><i class=\"fa fa-history\" style=\"font-size:20px\">&nbsp;&nbsp;Add-Question</i></a>\r\n                <a routerLink=\"history\"><i class=\"fa fa-globe\" style=\"font-size:20px\">&nbsp;&nbsp;Results</i></a>\r\n                <a routerLink=\"\"><i class=\"fa fa-globe\" style=\"font-size:20px\">&nbsp;&nbsp;Global Ranks</i></a>\r\n              </div>\r\n              &nbsp;\r\n              &nbsp;\r\n              <a class=\"nav-link btn btn-outline-secondary\" onclick=\"openNav()\" style=\"color:white; border-color:white;\"><i style=\"font-size:20px\" class=\"fa\">&#xf2be;&nbsp;</i>Profile</a>\r\n              <!-- <button class=\"btn btn-outline-light my-2 my-sm-0\" onclick=\"openNav()\"><i style=\"font-size:20px\" class=\"fa\">&#xf2be;&nbsp;</i>Search</button> -->\r\n              \r\n  \r\n                                           \r\n  \r\n  \r\n              <!-- <span style=\"font-size:30px;cursor:pointer\" onclick=\"openNav()\">&nbsp;&nbsp;&#9776;</span> -->\r\n              \r\n        \r\n  \r\n  \r\n        \r\n        \r\n      \r\n    </div>\r\n  </nav>\r\n  \r\n  \r\n  \r\n            \r\n        \r\n  \r\n  \r\n  \r\n  <!-- carousal using bootstrap 4-->\r\n  <!-- <div id=\"demo\" class=\"carousel slide\" style=\"background-color: transparent;\" data-ride=\"carousel\"> -->\r\n  \r\n  \r\n  \r\n  <!-- The slideshow -->\r\n  <!-- <div class=\"carousel-inner\">\r\n  <div class=\"carousel-item active\">\r\n    <img src=\"../../assets/Carrier Guide/logo4.jpg\" alt=\"Los Angeles\" width=\"1100\" height=\"300\">\r\n  </div>\r\n  <div class=\"carousel-item\">\r\n    <img src=\"../../assets/Carrier Guide/logo5.jpg\" alt=\"Chicago\" width=\"1100\" height=\"300\">\r\n  </div>\r\n  <div class=\"carousel-item\">\r\n    <img src=\"../../assets/Carrier Guide/logo2.jpg\" alt=\"New York\" width=\"1100\" height=\"300\">\r\n  </div>\r\n  </div> -->\r\n  \r\n  <!-- Left and right controls -->\r\n  <!-- <a class=\"carousel-control-prev\" href=\"#demo\" data-slide=\"prev\">\r\n  <span class=\"carousel-control-prev-icon\"></span>\r\n  </a>\r\n  <a class=\"carousel-control-next\" href=\"#demo\" data-slide=\"next\">\r\n  <span class=\"carousel-control-next-icon\"></span>\r\n  </a>\r\n  </div> -->\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  <br>\r\n  <br>\r\n  <!-- <app-dash-ad-content></app-dash-ad-content> --> \r\n  <router-outlet style=\"margin-left:25%;\" ></router-outlet>\r\n  <!-- cards using bootstrap  col row1-->\r\n  \r\n  \r\n  <!-- <div class=\"container-fluid \" style=\"background-color: transparent;\">\r\n  <h3 style=\"text-align: center;\">Web-dev quizes</h3>\r\n  <br>\r\n  \r\n  <div class=\"row\">\r\n  \r\n  <div class=\" col-md-3\" data-toggle=\"modal\" data-target=\".html_quiz\">\r\n    <div class=\"rounded imgp\">\r\n    <img src=\"../../assets/Carrier Guide/coding.jpg\" class=\"card-img-top\" alt=\"...\">\r\n        &nbsp;\r\n      <p class=\"card-text\" style=\"text-align: center; font-size: 20px;\">Html & Css</p>\r\n    </div>\r\n  </div>\r\n  \r\n  \r\n  <div class=\"col-md-3\" data-toggle=\"modal\" data-target=\".js_quiz\" >\r\n        <div class=\"rounded imgp\">\r\n        \r\n        <img src=\"../../assets/Carrier Guide/coding.jpg\" class=\"card-img-top\" alt=\"...\">\r\n        &nbsp;\r\n        \r\n          <p class=\"card-text\" style=\"text-align: center; font-size: 20px;\">Javascript</p>\r\n        </div>\r\n      </div>\r\n  \r\n      \r\n  \r\n      <div class=\"col-md-3\" data-toggle=\"modal\" data-target=\".database_quiz\">\r\n            <div class=\"rounded imgp\">\r\n            <img src=\"../../assets/Carrier Guide/coding.jpg\" class=\"card-img-top\" alt=\"...\">\r\n            &nbsp;\r\n        \r\n          <p class=\"card-text\" style=\"text-align: center; font-size: 20px;\">Database</p>\r\n            </div>\r\n          </div>\r\n  \r\n          \r\n  \r\n          <div class=\"col-md-3\" data-toggle=\"modal\" data-target=\".ds_quiz\">\r\n                <div class=\"rounded imgp\">\r\n                <img src=\"../../assets/Carrier Guide/coding.jpg\" class=\"card-img-top\" alt=\"...\">\r\n                &nbsp;\r\n        \r\n                <p class=\"card-text\" style=\"text-align: center; font-size: 20px;\">Data-structures</p>\r\n                </div> \r\n              </div>\r\n  \r\n  \r\n            </div>\r\n  \r\n            </div>\r\n     -->\r\n  \r\n  \r\n  \r\n  \r\n  <!-- cards using bootstrap  col row1-->\r\n  <!-- <br>\r\n  <br>\r\n  \r\n  \r\n  <div class=\"container-fluid\" style=\"background-color: transparent;\">\r\n  <h3 style=\"text-align: center;\">General quizes</h3>\r\n  <br>\r\n  \r\n  <div class=\"row\">\r\n  \r\n  <div class=\" col-md-4\" data-toggle=\"modal\" data-target=\".lg_quiz\" >\r\n    <div class=\"rounded imgp\">\r\n    <img src=\"../../assets/Carrier Guide/coding.jpg\" class=\"card-img-top\" alt=\"...\">\r\n    &nbsp;\r\n        \r\n                <p class=\"card-text\" style=\"text-align: center; font-size: 20px;\">Logical Reasoning</p>\r\n    </div>\r\n  </div>\r\n  \r\n  \r\n  <div class=\"col-md-4\" data-toggle=\"modal\" data-target=\".an_quiz\" >\r\n        <div class=\"rounded imgp\">\r\n        \r\n        <img src=\"../../assets/Carrier Guide/coding.jpg\" class=\"card-img-top\" alt=\"...\">\r\n        &nbsp;\r\n        \r\n        <p class=\"card-text\" style=\"text-align: center; font-size: 20px;\">Analytical Reasoning</p>\r\n        </div>\r\n      </div>\r\n  \r\n      \r\n  \r\n      <div class=\"col-md-4\" data-toggle=\"modal\" data-target=\".quants_quiz\">\r\n            <div class=\"rounded imgp\">\r\n            <img src=\"../../assets/Carrier Guide/coding.jpg\" class=\"card-img-top\" alt=\"...\">\r\n            &nbsp;\r\n        \r\n                <p class=\"card-text\" style=\"text-align: center; font-size: 20px;\">Quants</p>\r\n            </div>\r\n          </div>\r\n  \r\n  \r\n            </div>\r\n  \r\n            </div>\r\n  \r\n   -->\r\n  <br>\r\n  \r\n  <!-- the jumbotron for some other links and feed back-->\r\n  \r\n  <div class=\"jumbotron jumbotron-fluid \" style=\"margin-left:20%;\">\r\n        <div class=\"container\">\r\n  <div class=\"col-md-6\"></div>\r\n  <div class=\"col-md-6\">\r\n  \r\n  </div>\r\n        </div>\r\n      </div>\r\n  \r\n  \r\n  <footer style=\"margin-left:20%;\">\r\n  <p style=\"text-align: center\">copyright &copy; Quizio - 2019</p>\r\n    </footer>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  <!-- Large modal -->\r\n  <!-- <button type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\".bd-example-modal-lg\">Large modal</button> -->\r\n  \r\n  <div class=\"modal fade html_quiz\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog modal-lg\">\r\n  <div class=\"modal-content\">\r\n  \r\n  <div class=\"card text-center\">\r\n        <div class=\"card-header\">\r\n                Html & Css quiz\r\n        </div>\r\n        <div class=\"card-body\">\r\n          <h5 class=\"card-title\">Rules</h5>\r\n          <p class=\"card-text\"><ul>\r\n            <li>Be honest: Test taker statements are to be true and accurate. Two ways\r\n                 in which some individuals attempt to gain an unfair advantage are lying in \r\n                 order to obtain an accommodation, such as being granted extra time to take the test, \r\n                 and employing an imposter who takes the test in their behalf.</li>\r\n  \r\n  \r\n            <li>\r\n                    Be fair: The test-taking environment is to be the same, as much as it is possible, for all test takers.\r\n                     An exception to this rule is made for those who require an accommodation, such as reading or answer-responding assistance. \r\n                     All test takers have access to a uniform set of test material.\r\n                     Electronic devices with memories that allow for the smuggling of information useful in taking the test are specifically prohibited.\r\n            </li>\r\n  \r\n            <li>\r\n                    Behave appropriately: The testing event is to remain free from disruptions and distractions. \r\n                    This allows test takers the opportunity to perform their best in a fair and equitable manner.\r\n                     Test takers who create distractions may be subject to discipline. Except for medical reasons, \r\n                     test takers may not bring food, liquids or other items into the test administration area.\r\n            </li>\r\n          </ul>\r\n          <a routerLink='quiz' class=\"btn btn-success\">Start Quiz</a>\r\n        </div>\r\n        <div class=\"card-footer text-muted\">\r\n          Time provided - 2hrs\r\n        </div>\r\n      </div>\r\n  </div>\r\n  </div>\r\n  </div>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  <div class=\"modal fade database_quiz\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog modal-lg\">\r\n  <div class=\"modal-content\">\r\n  \r\n      <div class=\"card text-center\">\r\n              <div class=\"card-header\">\r\n                     Database Quiz\r\n              </div>\r\n              <div class=\"card-body\">\r\n                <h5 class=\"card-title\">Rules</h5>\r\n                <p class=\"card-text\"><ul>\r\n                  <li>Be honest: Test taker statements are to be true and accurate. Two ways\r\n                       in which some individuals attempt to gain an unfair advantage are lying in \r\n                       order to obtain an accommodation, such as being granted extra time to take the test, \r\n                       and employing an imposter who takes the test in their behalf.</li>\r\n  \r\n  \r\n                  <li>\r\n                          Be fair: The test-taking environment is to be the same, as much as it is possible, for all test takers.\r\n                           An exception to this rule is made for those who require an accommodation, such as reading or answer-responding assistance. \r\n                           All test takers have access to a uniform set of test material.\r\n                           Electronic devices with memories that allow for the smuggling of information useful in taking the test are specifically prohibited.\r\n                  </li>\r\n  \r\n                  <li>\r\n                          Behave appropriately: The testing event is to remain free from disruptions and distractions. \r\n                          This allows test takers the opportunity to perform their best in a fair and equitable manner.\r\n                           Test takers who create distractions may be subject to discipline. Except for medical reasons, \r\n                           test takers may not bring food, liquids or other items into the test administration area.\r\n                  </li>\r\n                </ul>\r\n                <a href=\"#\" class=\"btn btn-success\">Start Quiz</a>\r\n              </div>\r\n              <div class=\"card-footer text-muted\">\r\n                Time provided - 2hrs\r\n              </div>\r\n            </div>\r\n  </div>\r\n  </div>\r\n  </div>\r\n  \r\n  \r\n  <div class=\"modal fade js_quiz\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog modal-lg\">\r\n  <div class=\"modal-content\">\r\n  \r\n      <div class=\"card text-center\">\r\n              <div class=\"card-header\">\r\n                     Javascript Quiz\r\n              </div>\r\n              <div class=\"card-body\">\r\n                <h5 class=\"card-title\">Rules</h5>\r\n                <p class=\"card-text\"><ul>\r\n                  <li>Be honest: Test taker statements are to be true and accurate. Two ways\r\n                       in which some individuals attempt to gain an unfair advantage are lying in \r\n                       order to obtain an accommodation, such as being granted extra time to take the test, \r\n                       and employing an imposter who takes the test in their behalf.</li>\r\n  \r\n  \r\n                  <li>\r\n                          Be fair: The test-taking environment is to be the same, as much as it is possible, for all test takers.\r\n                           An exception to this rule is made for those who require an accommodation, such as reading or answer-responding assistance. \r\n                           All test takers have access to a uniform set of test material.\r\n                           Electronic devices with memories that allow for the smuggling of information useful in taking the test are specifically prohibited.\r\n                  </li>\r\n  \r\n                  <li>\r\n                          Behave appropriately: The testing event is to remain free from disruptions and distractions. \r\n                          This allows test takers the opportunity to perform their best in a fair and equitable manner.\r\n                           Test takers who create distractions may be subject to discipline. Except for medical reasons, \r\n                           test takers may not bring food, liquids or other items into the test administration area.\r\n                  </li>\r\n                </ul>\r\n                <a href=\"#\" class=\"btn btn-success\">Start Quiz</a>\r\n              </div>\r\n              <div class=\"card-footer text-muted\">\r\n                Time provided - 2hrs\r\n              </div>\r\n            </div>\r\n  </div>\r\n  </div>\r\n  </div>\r\n  \r\n  \r\n  \r\n  \r\n  \r\n  \r\n  <div class=\"modal fade ds_quiz\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog modal-lg\">\r\n  <div class=\"modal-content\">\r\n  \r\n      <div class=\"card text-center\">\r\n              <div class=\"card-header\">\r\n                     Data-Structures Quiz\r\n              </div>\r\n              <div class=\"card-body\">\r\n                <h5 class=\"card-title\">Rules</h5>\r\n                <p class=\"card-text\"><ul>\r\n                  <li>Be honest: Test taker statements are to be true and accurate. Two ways\r\n                       in which some individuals attempt to gain an unfair advantage are lying in \r\n                       order to obtain an accommodation, such as being granted extra time to take the test, \r\n                       and employing an imposter who takes the test in their behalf.</li>\r\n  \r\n  \r\n                  <li>\r\n                          Be fair: The test-taking environment is to be the same, as much as it is possible, for all test takers.\r\n                           An exception to this rule is made for those who require an accommodation, such as reading or answer-responding assistance. \r\n                           All test takers have access to a uniform set of test material.\r\n                           Electronic devices with memories that allow for the smuggling of information useful in taking the test are specifically prohibited.\r\n                  </li>\r\n  \r\n                  <li>\r\n                          Behave appropriately: The testing event is to remain free from disruptions and distractions. \r\n                          This allows test takers the opportunity to perform their best in a fair and equitable manner.\r\n                           Test takers who create distractions may be subject to discipline. Except for medical reasons, \r\n                           test takers may not bring food, liquids or other items into the test administration area.\r\n                  </li>\r\n                </ul>\r\n                <a href=\"#\" class=\"btn btn-success\">Start Quiz</a>\r\n              </div>\r\n              <div class=\"card-footer text-muted\">\r\n                Time provided - 2hrs\r\n              </div>\r\n            </div>\r\n  </div>\r\n  </div>\r\n  </div>\r\n  \r\n  \r\n  \r\n  \r\n  <div class=\"modal fade lg_quiz\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog modal-lg\">\r\n  <div class=\"modal-content\">\r\n  \r\n      <div class=\"card text-center\">\r\n              <div class=\"card-header\">\r\n                     Logical-Reasoning Quiz\r\n              </div>\r\n              <div class=\"card-body\">\r\n                <h5 class=\"card-title\">Rules</h5>\r\n                <p class=\"card-text\"><ul>\r\n                  <li>Be honest: Test taker statements are to be true and accurate. Two ways\r\n                       in which some individuals attempt to gain an unfair advantage are lying in \r\n                       order to obtain an accommodation, such as being granted extra time to take the test, \r\n                       and employing an imposter who takes the test in their behalf.</li>\r\n  \r\n  \r\n                  <li>\r\n                          Be fair: The test-taking environment is to be the same, as much as it is possible, for all test takers.\r\n                           An exception to this rule is made for those who require an accommodation, such as reading or answer-responding assistance. \r\n                           All test takers have access to a uniform set of test material.\r\n                           Electronic devices with memories that allow for the smuggling of information useful in taking the test are specifically prohibited.\r\n                  </li>\r\n  \r\n                  <li>\r\n                          Behave appropriately: The testing event is to remain free from disruptions and distractions. \r\n                          This allows test takers the opportunity to perform their best in a fair and equitable manner.\r\n                           Test takers who create distractions may be subject to discipline. Except for medical reasons, \r\n                           test takers may not bring food, liquids or other items into the test administration area.\r\n                  </li>\r\n                </ul>\r\n                <a href=\"#\" class=\"btn btn-success\">Start Quiz</a>\r\n              </div>\r\n              <div class=\"card-footer text-muted\">\r\n                Time provided - 2hrs\r\n              </div>\r\n            </div>\r\n  </div>\r\n  </div>\r\n  </div>\r\n  \r\n  \r\n  \r\n  \r\n  <div class=\"modal fade an_quiz\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog modal-lg\">\r\n  <div class=\"modal-content\">\r\n  \r\n      <div class=\"card text-center\">\r\n              <div class=\"card-header\">\r\n                     Analytical-Reasoning Quiz\r\n              </div>\r\n              <div class=\"card-body\">\r\n                <h5 class=\"card-title\">Rules</h5>\r\n                <p class=\"card-text\"><ul>\r\n                  <li>Be honest: Test taker statements are to be true and accurate. Two ways\r\n                       in which some individuals attempt to gain an unfair advantage are lying in \r\n                       order to obtain an accommodation, such as being granted extra time to take the test, \r\n                       and employing an imposter who takes the test in their behalf.</li>\r\n  \r\n  \r\n                  <li>\r\n                          Be fair: The test-taking environment is to be the same, as much as it is possible, for all test takers.\r\n                           An exception to this rule is made for those who require an accommodation, such as reading or answer-responding assistance. \r\n                           All test takers have access to a uniform set of test material.\r\n                           Electronic devices with memories that allow for the smuggling of information useful in taking the test are specifically prohibited.\r\n                  </li>\r\n  \r\n                  <li>\r\n                          Behave appropriately: The testing event is to remain free from disruptions and distractions. \r\n                          This allows test takers the opportunity to perform their best in a fair and equitable manner.\r\n                           Test takers who create distractions may be subject to discipline. Except for medical reasons, \r\n                           test takers may not bring food, liquids or other items into the test administration area.\r\n                  </li>\r\n                </ul>\r\n                <a href=\"#\" class=\"btn btn-success\">Start Quiz</a>\r\n              </div>\r\n              <div class=\"card-footer text-muted\">\r\n                Time provided - 2hrs\r\n              </div>\r\n            </div>\r\n  </div>\r\n  </div>\r\n  </div>\r\n  \r\n  \r\n  \r\n  \r\n  <div class=\"modal fade quants_quiz\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\r\n  <div class=\"modal-dialog modal-lg\">\r\n  <div class=\"modal-content\">\r\n  \r\n      <div class=\"card text-center\">\r\n              <div class=\"card-header\">\r\n                     Quants Quiz\r\n              </div>\r\n              <div class=\"card-body\">\r\n                <h5 class=\"card-title\">Rules</h5>\r\n                <p class=\"card-text\"><ul>\r\n                  <li>Be honest: Test taker statements are to be true and accurate. Two ways\r\n                       in which some individuals attempt to gain an unfair advantage are lying in \r\n                       order to obtain an accommodation, such as being granted extra time to take the test, \r\n                       and employing an imposter who takes the test in their behalf.</li>\r\n  \r\n  \r\n                  <li>\r\n                          Be fair: The test-taking environment is to be the same, as much as it is possible, for all test takers.\r\n                           An exception to this rule is made for those who require an accommodation, such as reading or answer-responding assistance. \r\n                           All test takers have access to a uniform set of test material.\r\n                           Electronic devices with memories that allow for the smuggling of information useful in taking the test are specifically prohibited.\r\n                  </li>\r\n  \r\n                  <li>\r\n                          Behave appropriately: The testing event is to remain free from disruptions and distractions. \r\n                          This allows test takers the opportunity to perform their best in a fair and equitable manner.\r\n                           Test takers who create distractions may be subject to discipline. Except for medical reasons, \r\n                           test takers may not bring food, liquids or other items into the test administration area.\r\n                  </li>\r\n                </ul>\r\n                <a href=\"#\" class=\"btn btn-success\">Start Quiz</a>\r\n              </div>\r\n              <div class=\"card-footer text-muted\">\r\n                Time provided - 2hrs\r\n              </div>\r\n            </div>\r\n  </div>\r\n  </div>\r\n  </div>\r\n  \r\n  ","import { Injectable } from '@angular/core';\r\nimport { HttpClientModule ,HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { serverresponse, studentdetails, addcourseinfo, courseinfo, coursewithquestions, result, reshistory, google_auth_response } from './model/form.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class DataService {\r\n\r\n  //create a new property http of HttpClient to access the server\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //define the function which posts or sends data to server and returns the response\r\n  stu_register(stuinfo_obj): Observable<serverresponse>\r\n  {\r\n    return this.http.post<serverresponse>(\"http://localhost:3000/api/register\", stuinfo_obj);\r\n  }\r\n\r\n  stu_login(logininfo_ob): Observable<serverresponse>\r\n  {\r\n    return this.http.post<serverresponse>(\"http://localhost:3000/api/login\", logininfo_ob);\r\n  }\r\n\r\n  AddCourseData(course_ob): Observable<addcourseinfo>\r\n  {\r\n    return this.http.post<addcourseinfo>(\"http://localhost:3000/api/addcourse\", course_ob);\r\n  }\r\n\r\n  AddQuestion(ques_ob): Observable<serverresponse>\r\n  {\r\n    return this.http.post<serverresponse>(\"http://localhost:3000/api/addquestion\", ques_ob);\r\n  } \r\n\r\n  AddExamTaken(exam_ob): Observable<serverresponse>\r\n  {\r\n    return this.http.post<serverresponse>(\"http://localhost:3000/api/addexam\", exam_ob);\r\n  }\r\n\r\n  //to get all the course thos function is being used\r\n  \r\n  getallcourse():Observable<courseinfo[]>\r\n  {\r\n    return this.http.get<courseinfo[]>('http://localhost:3000/api/adcontent');\r\n  }\r\n\r\n  google_auth():Observable<google_auth_response>\r\n  {\r\n    return this.http.get<google_auth_response>('http://localhost:3000/api/googleauth');\r\n  }\r\n  // getallhistoy():Observable<reshistory[]>\r\n  // {\r\n  //   // return this.http.get<reshistory[]>('http://localhost:3000/api/reshistory');\r\n  //   return this.http.get<reshistory[]>('http://localhost:3000/api/rer');\r\n  // }\r\n  getallhistoy(getstudent): Observable<reshistory>\r\n  {\r\n    // return this.http.get<reshistory[]>('http://localhost:3000/api/reshistory');\r\n    return this.http.post<reshistory>('http://localhost:3000/api/rer', getstudent);\r\n  }\r\n\r\n\r\n  //func to get only single object\r\n\r\n  getspecificcourse(getcourse): Observable<coursewithquestions>\r\n  {\r\n    return this.http.post<coursewithquestions>('http://localhost:3000/api/specificcourse', getcourse);\r\n  }\r\n\r\n\r\n  //Get course info for to add questions\r\n\r\n  getcourseforquestion(): Observable<courseinfo[]>\r\n  {\r\n    return this.http.get<courseinfo[]>('http://localhost:3000/api/adcontent');\r\n  }\r\n\r\n  //Insert result in database\r\n\r\n  submitresult(res_arr): Observable<serverresponse>\r\n  {\r\n    return this.http.post<serverresponse>('http://localhost:3000/api/result', res_arr);\r\n  }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { studentoption } from '../model/form.model';\r\nimport { DataService } from '../data.service';\r\n\r\n@Component({\r\n  selector: 'app-exampage',\r\n  templateUrl: './exampage.component.html',\r\n  styleUrls: ['./exampage.component.css']\r\n})\r\n\r\nexport class ExampageComponent implements OnInit {\r\n\r\n  stu_option = new studentoption();\r\n  questions_obj;\r\n  qno;\r\n  quesarray = [];\r\n  ques_no;\r\n  firstques;\r\n  result = []; //array to store result\r\n  \r\n\r\n  constructor(private route: ActivatedRoute, private ds: DataService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n\r\n    var i;\r\n    //receive all questions  \r\n    this.route.queryParamMap.subscribe((data) => { this.questions_obj = JSON.parse(data.get('course_questions')) })\r\n      console.log(this.questions_obj);\r\n\r\n      this.quesarray = this.questions_obj.Questions;\r\n      console.log(this.quesarray);\r\n\r\n      console.log(this.quesarray.length);\r\n\r\n    for(i = 0; i < this.quesarray.length; i++)\r\n    {\r\n        if(this.quesarray[i].qno == 1)\r\n        {\r\n            this.firstques = this.quesarray[i];\r\n            console.log(this.firstques);\r\n        }\r\n        else\r\n        {\r\n            console.log(\"Please ask admmin to add ques to this course..\");\r\n        }\r\n    }\r\n  }\r\n\r\n  prev(qno){\r\n    var i = qno;\r\n    i=i-1;\r\n\r\n    this.firstques = this.quesarray[i-1];\r\n  }\r\n \r\n  \r\n  next(qno){\r\n    var restform = <HTMLFormElement>document.getElementById('quesfrm');\r\n    \r\n    var j = qno; //j = 1 for 1st iteration\r\n\r\n    if(j < this.quesarray.length)\r\n    {\r\n      if(this.stu_option.optn == this.quesarray[j-1].correct)\r\n      {\r\n          this.result[j-1] = 1;\r\n      }\r\n      else\r\n      {\r\n          this.result[j-1] = 0;\r\n      }\r\n      console.log(this.result);\r\n  \r\n      j=j+1;\r\n  \r\n      this.firstques = this.quesarray[j-1];\r\n      restform.reset();\r\n    }\r\n    \r\n    else\r\n    {\r\n        if(this.stu_option.optn == this.quesarray[j-1].correct)\r\n        {\r\n            this.result[j-1] = 1;\r\n        }\r\n        else\r\n        {\r\n            this.result[j-1] = 0;\r\n        }\r\n        console.log(this.result);\r\n        var r = { resultarray: this.result };\r\n       \r\n        this.router.navigate(['submit'], { queryParams: { res: JSON.stringify(r), ques: JSON.stringify(this.questions_obj) }});\r\n    }\r\n    //check if the selected option was correct or not\r\n    \r\n  }\r\n\r\n\r\n\r\n}\r\n ","<div class=\"jumbotron\" style=\"margin-top: 4%;\">\r\n    <h5 class=\"display-4\">Q. No. {{ firstques.qno }}</h5><br><br>\r\n    <p class=\"lead\">{{ firstques.question }}</p><hr class=\"my-4\">\r\n    <form id=\"quesfrm\" #quesoptions = \"ngForm\">\r\n        <input name=\"optn\" type=\"radio\" value=\"a\" [(ngModel)] = \"stu_option.optn\" />&nbsp;{{firstques.a}}<br><br>\r\n        <input name=\"optn\" type=\"radio\" value=\"b\" [(ngModel)] = \"stu_option.optn\" />&nbsp;{{firstques.b}}<br><br>\r\n        <input name=\"optn\" type=\"radio\" value=\"c\" [(ngModel)] = \"stu_option.optn\" />&nbsp;{{firstques.c}}<br><br>\r\n        <input name=\"optn\" type=\"radio\" value=\"d\" [(ngModel)] = \"stu_option.optn\" />&nbsp;{{firstques.d}}<br><br>\r\n    </form>\r\n    \r\n    <p class=\"lead\">\r\n        <a class=\"btn btn-primary btn-lg\" (click)='prev(firstques.qno)' role=\"button\">&#xab; Previous</a> &nbsp;&nbsp;&nbsp;&nbsp;\r\n      <a class=\"btn btn-primary btn-lg\" (click)='next(firstques.qno)' role=\"button\">Next &#xbb;</a>\r\n      <!-- we will be sending the question number in the next function -->\r\n    </p>\r\n  </div>\r\n\r\n\r\n    <!-- <p>{{ questions_obj.category }}</p>\r\n     <div *ngFor = \"let p of questions_obj.Questions\">\r\n        <p>{{ p.question }}</p>\r\n        <p>{{ p.a }}</p>\r\n        <p>{{ p.b }}</p>\r\n        <p>{{ p.c }}</p>\r\n        <p>{{ p.d }}</p>\r\n        <p>{{ p.correct }}</p>\r\n    </div>\r\n    <div>\r\n        <p>{{ questions_obj.Questions[2]|json }}</p>\r\n    </div> -->\r\n    \r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\nlogin_page()\r\n{\r\n  this.router.navigate(['login']);\r\n}\r\n\r\nsignup_page()\r\n{\r\n  this.router.navigate(['signup']);\r\n}\r\n\r\n}\r\n","<div class=\"flex-container1\">\r\n  <div class=\"div-logo\">\r\n    <div class=\"div-head\"><h2 class=\"logo\">QUIZIO</h2></div>\r\n  </div>\r\n  <div class=\"div-content\">\r\n    <h1 class=\"top-heading\">Don't Stress. Do Your Best. Forget The Rest.</h1>\r\n    <button type=\"button\" class=\"btn-knowmore\"><a href=\"#content\" class=\"a-knowmore\">Let's Discover</a></button><br class=\"break\">\r\n    <!--<a href=\"#\" class=\"downarrow\"><i class=\"fa fa-angle-double-down\" style=\"font-size:48px; color: white;\"></i></a>-->\r\n  </div>\r\n  <div class=\"div-login\">\r\n    <button type=\"button\" class=\"btn-login\" (click) = \"login_page()\">Login</button>\r\n    <button type=\"button\" class=\"btn-signup\" (click) = \"signup_page()\">Signup</button>\r\n  </div>\r\n</div>\r\n\r\n\r\n\r\n<div class=\"flex-container2\" id=\"content\">\r\n  <div class=\"fc2-text\">\r\n    <h2>A Simple and Easy Design</h2>\r\n    <p>This platform for giving online quizes is designed in a very simple manner <br>This platform for giving online quizes is designed in a very simple manner\r\n      <br>This platform for giving online quizes is designed in a very simple manner <br>This platform for giving online quizes is designed in a very simple manner</p>\r\n    <br><button class=\"btn-fc2\">Want to explore? <a href=\"login.html\">Login</a></button>\r\n  </div>\r\n  <div class=\"fc2-image\">\r\n    <img src=\"../../assets/images/bg.jpg\" height=\"300px\" width=\"300px\" />\r\n  </div>\r\n</div><hr>\r\n\r\n\r\n\r\n<div class=\"flex-container3\">\r\n  <div class=\"fc3-image\">\r\n    <img src=\"../../assets/images/bg.jpg\" height=\"300px\" width=\"300px\" />\r\n  </div>\r\n  <div class=\"fc3-text\">\r\n    <h2>A Simple and Easy Design</h2>\r\n    <p>This platform for giving online quizes is designed in a very simple manner <br>This platform for giving online quizes is designed in a very simple manner\r\n    <br>This platform for giving online quizes is designed in a very simple manner <br>This platform for giving online quizes is designed in a very simple manner</p>\r\n    <button class=\"btn-fc3\">Want to explore? <a href=\"login.html\">Login</a></button>\r\n  </div>\r\n</div><hr>\r\n\r\n<div class=\"flex-container4\">\r\n  <div class=\"fc4-text\">\r\n    <h2>A Simple and Easy Design</h2>\r\n    <p>This platform for giving online quizes is designed in a very simple manner <br>This platform for giving online quizes is designed in a very simple manner\t\t\t\t\t<br>This platform for giving online quizes is designed in a very simple manner <br>This platform for giving online quizes is designed in a very simple manner</p>\r\n    <button class=\"btn-fc4\">Want to explore? <a href=\"login.html\">Login</a></button>\r\n  </div>\r\n  <div class=\"fc4-image\">\r\n    <img src=\"../../assets/images/bg.jpg\" height=\"300px\" width=\"300px\" />\r\n  </div>\r\n</div><hr>\r\n\r\n<a href=\"#top\" id=\"top-link\">Back To Top <i class=\"fa fa-arrow-up icon-top\" style=\"font-size:20px\"></i></a>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DataService } from '../data.service';\r\n\r\n@Component({\r\n  selector: 'app-instructions',\r\n  templateUrl: './instructions.component.html',\r\n  styleUrls: ['./instructions.component.css']\r\n})\r\nexport class InstructionsComponent implements OnInit { \r\n\r\n  coursedata;\r\n  specific_course_obj;\r\n\r\n  constructor(private route: ActivatedRoute, private ds: DataService, private router: Router) { }\r\n\r\n  ngOnInit() {\r\n      this.route.queryParamMap.subscribe((data) => {\r\n          this.coursedata = data.get('quizdetails');\r\n          console.log(this.coursedata);\r\n        })\r\n        var p = { coursename: this.coursedata };\r\n\r\n      this.ds.getspecificcourse(p).subscribe((data) => { this.specific_course_obj = JSON.stringify(data); });\r\n   \r\n      //alert(this.specific_course_obj);\r\n  }\r\n\r\n  startQuiz()\r\n  {\r\n      this.router.navigate(['exam'], { queryParams: { course_questions: this.specific_course_obj}});\r\n  }\r\n\r\n}\r\n","\r\n              <div class=\"jumbotron jumbotron-fluid\">\r\n                <div class=\"container\">\r\n                  <h1 class=\"display-4\"></h1>\r\n                  <p class=\"lead\"></p>\r\n                </div>\r\n              </div>\r\n\r\n    <div class=\"card text-center\"> \r\n            <div class=\"card-header\">\r\n                <p>Ready to give test of</p>\r\n            </div>\r\n            <div class=\"card-body\">\r\n              <h5 class=\"card-title\">LEARN FIRST THEN GIVE TeST</h5>\r\n              <p class=\"card-text\"><ul>\r\n                <li>Be honest: Test taker statements are to be true and accurate. Two ways\r\n                     in which some individuals attempt to gain an unfair advantage are lying in \r\n                     order to obtain an accommodation, such as being granted extra time to take the test, \r\n                     and employing an imposter who takes the test in their behalf.</li>\r\n\r\n\r\n                <li>\r\n                        Be fair: The test-taking environment is to be the same, as much as it is possible, for all test takers.\r\n                         An exception to this rule is made for those who require an accommodation, such as reading or answer-responding assistance. \r\n                         All test takers have access to a uniform set of test material.\r\n                         Electronic devices with memories that allow for the smuggling of information useful in taking the test are specifically prohibited.\r\n                </li>\r\n\r\n                <li>\r\n                        Behave appropriately: The testing event is to remain free from disruptions and distractions. \r\n                        This allows test takers the opportunity to perform their best in a fair and equitable manner.\r\n                         Test takers who create distractions may be subject to discipline. Except for medical reasons, \r\n                         test takers may not bring food, liquids or other items into the test administration area.\r\n                </li>\r\n              </ul>\r\n              <a class=\"btn btn-success\" (click) = \"startQuiz()\">Start Quiz</a>\r\n            </div>\r\n            <div class=\"card-footer text-muted\">\r\n              time - 2hrs\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div class=\"jumbotron jumbotron-fluid\">\r\n                <div class=\"container\">\r\n                  <h1 class=\"display-4\"></h1>\r\n                  <p class=\"lead\"></p>\r\n                </div>\r\n              </div>","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { logindetails } from '../model/form.model';\r\nimport { DataService } from '../data.service';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { SocialLoginModule, SocialUser, AuthService, GoogleLoginProvider, FacebookLoginProvider } from 'angularx-social-login';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  public user : any = SocialUser;\r\n  login_info = new logindetails();\r\n\r\n  constructor(private router: Router, private ds: DataService, private authserve: AuthService) { }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n\r\n  dashboard_page()\r\n  {\r\n    console.log(\"Hello\");\r\n    this.ds.stu_login(this.login_info).subscribe((data) => {\r\n      if(data.status == \"ok\")\r\n      {\r\n        localStorage.setItem(\"email\", this.login_info.email);\r\n        \r\n        // console.log(data.description);\r\n        //added the condition to navigate to the prop-er dashboard\r\n        if(data.description.role == \"admin\"){\r\n          console.log(\"Inside Admin Dashboard\");\r\n          this.router.navigate(['dashboardadmin']);\r\n        }\r\n        else{\r\n          console.log(\"Inside Student Dashboard\");\r\n          this.router.navigate(['dashboard']);\r\n        }\r\n\r\n       \r\n      }\r\n\r\n      else\r\n      {\r\n        alert(\"Incorrect Credentials . Try Again\");\r\n      }\r\n    })\r\n  }\r\n\r\n  googlelogin()\r\n  {\r\n    console.log(\"Inside the function -> googlelogin\");\r\n      this.authserve.signIn(GoogleLoginProvider.PROVIDER_ID).then((userData) => {\r\n      this.user = userData;\r\n      localStorage.setItem('userpic', this.user.photoUrl);\r\n      localStorage.setItem('userName', this.user.name);\r\n      console.log(this.user);\r\n      if(this.user)\r\n      {\r\n        this.router.navigate(['signup']);\r\n      }\r\n      });\r\n  }\r\n\r\n  facebooklogin()\r\n  {\r\n      console.log(\"Inside the function -> facebooklogin\");\r\n      this.authserve.signIn(FacebookLoginProvider.PROVIDER_ID).then((userData) => {\r\n      this.user = userData;\r\n      localStorage.setItem('userpic', this.user.photoUrl);\r\n      localStorage.setItem('userName', this.user.name);\r\n      if(this.user)\r\n      {\r\n        this.router.navigate(['signup']);\r\n      }\r\n      });\r\n  }\r\n\r\n}\r\n\r\n  ","<!-- <div style=\"position:relative; top: 0px; height:768px; width: 100%; background-image:url('../../assets/images/bg.jpg'); background-size: cover;\">\r\n  <div id=\"login-form\">\r\n          <form action=\"dashboard.html\" method=\"POST\" #loginform = \"ngForm\">\r\n          <label class=\"lblemail\">E-mail Address</label><br class=\"break\">\r\n          <input type=\"email\" id=\"email\" placeholder=\"Email\" name=\"email\" [(ngModel)] = \"login_info.email\" required /><br class=\"break\">\r\n      \r\n          <label class=\"lblpassword\">Password</label><br>\r\n          <input type=\"password\" id=\"pw\" placeholder=\"Password\" name=\"password\" [(ngModel)] = \"login_info.password\" required /><br>\r\n\r\n          <input type=\"checkbox\" class=\"password-remember\" id=\"remember\"/><p class=\"remembertext\">Remember Me</p>\r\n          <a href=\"reset.html\" class=\"forgot\">Forgot Password?</a>\r\n\r\n          <div class=\"login\">\r\n              <button type=\"submit\" class=\"btnlogin\" id=\"btn-login\" (click) = \"dashboard_page()\">Login</button>\r\n          </div>\r\n\r\n          <p class=\"newac\">Don't Have Acoount? <a routerLink = 'signup'>Signup</a></p>\r\n\r\n      </form>\r\n  </div>\r\n</div> -->\r\n \r\n\r\n\r\n\r\n<div class=\"container-fluid bg\">\r\n  <div class=\"row \">\r\n      <div class=\"col-md-4 col-sm-4 col-xs-12\"></div>\r\n      <div class=\"col-md-4 col-sm-4 col-xs-12\">\r\n          <!--form start-->\r\n\r\n          <form class=\"form\" action=\"dashboard.html\" method=\"POST\" #loginform = \"ngForm\">\r\n              <h1>Log IN</h1>\r\n              <div class=\"form-group\">\r\n          \r\n            <input class=\"form-control\" type=\"email\" placeholder=\"Email\" name=\"email\" [(ngModel)] = \"login_info.email\" required >\r\n                </div>\r\n              \r\n\r\n                <div class=\"form-group\">\r\n           \r\n            <input class=\"form-control\" type=\"password\" placeholder=\"Password\" name=\"password\" [(ngModel)] = \"login_info.password\" required />\r\n                  </div>\r\n\r\n                  \r\n                  <div class=\"form-group\">\r\n            <input type=\"checkbox\" class=\"custom-control-input\"/><p class=\"remembertext\">Remember Me</p>\r\n           \r\n            </div>\r\n\r\n            \r\n            <a href=\"reset.html\" class=\"alert-link\">Forgot Password?</a><br>\r\n\r\n            <br>\r\n            <button type=\"button\" class=\"btn btn-outline-success btn-sm btn-block\" (click) = \"dashboard_page()\">LogIn</button>\r\n            <br>\r\n\r\n           \r\n           \r\n                <p class=\"newac\">Don't Have Acoount? <a  class=\"alert-link\" routerLink = 'signup'>Signup</a></p>\r\n                <p class=\"login-using-google\">Or</p>\r\n                <!-- <button type=\"submit\" class=\"google-btn btn btn-sm btn-block\" (click) = \"googlelogin()\"><img src=\"../../assets/images/icon/googleicon.png\" height=\"30px\" width=\"70px\" />Login with Google</button>\r\n                <button type=\"submit\" class=\"google-btn btn btn-sm btn-block\" (click) = \"facebooklogin()\"><img src=\"../../assets/images/icon/googleicon.png\" height=\"30px\" width=\"70px\" />Login with Facebook</button> -->\r\n                <div class=\"btn-group btn-group-wrap\" style=\"text-align: center; display: block;\">\r\n                  <button class=\"btn btn-secondary mr-1 mt-2\" style=\"background-color: #C63D2D; border: #C63D2D;\" (click)='googlelogin()'><i class=\"fa fa-google\"></i> Login using Google</button>\r\n                  <button class=\"btn btn-secondary mr-1 mt-2\" style=\"background-color: #385998; border: #385998;\" (click)='facebooklogin()'><i class=\"fa fa-facebook\"></i> Login using Facebook</button>\r\n                </div>\r\n               \r\n            \r\n            \r\n  \r\n        </form>\r\n\r\n      </div>\r\n\r\n\r\n      <div class=\"col-md-4 col-sm-4 col-xs-12\"></div>\r\n  </div>\r\n</div>","export class studentdetails {\r\n    fname;\r\n    lname;\r\n    role;\r\n    code;\r\n    mobile;\r\n    dob;\r\n    email;\r\n    pw;\r\n    cpw;\r\n    gender;\r\n}\r\n\r\nexport class serverresponse {\r\n    msg;\r\n    status;\r\n    description;\r\n    \r\n}\r\n\r\nexport class logindetails {\r\n    email;\r\n    password;\r\n}\r\n\r\nexport class addcourseinfo {\r\n    category;\r\n    courseName;\r\n}\r\n\r\nexport class addquestioninfo { \r\n    qno;\r\n    courseselected;\r\n    question;\r\n    a;\r\n    b;\r\n    c;\r\n    d;\r\n    correct; \r\n}\r\n\r\n//added new class for getting the course info\r\nexport class google_auth_response {\r\n    PROVIDER_ID : any\r\n    provider: any\r\n}\r\n\r\nexport class courseinfo {\r\n    _id: string;\r\n    category:string;\r\n    coursename:string;\r\n}\r\n\r\nexport class coursewithquestions {\r\n    _id: string;\r\n    category:string;\r\n    coursename:string;\r\n    Questions:string;\r\n}\r\n\r\nexport class studentoption {\r\n    optn;\r\n}\r\n\r\nexport class result {\r\n    qno;\r\n    ques;\r\n    a;\r\n    b;\r\n    c;\r\n    d;\r\n    correct;\r\n    submitted: [];   //Result array is stored here.\r\n}\r\n\r\nexport class reshistory{\r\n    firstname:string;\r\n    lastname:string;\r\n    role:string;\r\n    countrycode:string;\r\n    mobile:string;\r\n    dob:string;\r\n    email:string;\r\n    password:string;\r\n    cpassword:string;\r\n    gender:string;\r\n    exams=[];      \r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { DataService } from '../data.service';\r\n// import { SSL_OP_SSLEAY_080_CLIENT_DH_BUG } from 'constants';\r\n\r\n@Component({\r\n  selector: 'app-resultstudents',\r\n  templateUrl: './resultstudents.component.html',\r\n  styleUrls: ['./resultstudents.component.css']\r\n})\r\nexport class ResultstudentsComponent implements OnInit {\r\n  spstd;\r\n  historyobj;\r\n  getobj;\r\n  constructor(private ds:DataService) { }\r\n\r\n  ngOnInit() {\r\n    // this.ds.getallhistoy().subscribe((data)=>{this.getobj = data;});\r\n    var p={email: localStorage.getItem('email')};\r\n    this.ds.getallhistoy(p).subscribe((data) => { this.spstd=data; });\r\n    console.log(this.spstd);\r\n    // if (this.getobj.email== localStorage.getItem('email')){\r\n    //   this.specificstudent=this.getobj.exams;\r\n    //   this.historyobj = this.specificstudent.exams;\r\n    // }\r\n    // var i;\r\n    // var temparr=[];\r\n    // for(i = 0; i < this.getobj.length; i++){\r\n    //   if(this.getobj[i].email == localStorage.getItem('email')){\r\n    //     temparr=this.getobj[i].exams;\r\n    //   }\r\n    // }\r\n    // this.ds.getallhistoy(p).subscribe((data) => { this.specificstudent= JSON.stringify(data); });\r\n    // console.log(this.specificstudent);\r\n    // this.historyobj = this.specificstudent.exams;\r\n    \r\n\r\n  }\r\n\r\n}\r\n","<div class=\"container\" style=\"align-content: center; margin-top: 4%; margin-left:19%;\">\r\n<table class=\"table table-striped\">\r\n   <thead>\r\n      <tr>\r\n        <th scope=\"col\">date</th>\r\n        <th scope=\"col\">score</th>\r\n        <th scope=\"col\">percentage</th>\r\n        <th scope=\"col\">result</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      <tr *ngFor = 'let p of spstd'>\r\n        <th scope=\"row\">{{p.date}}</th>\r\n        <td>{{p.score}}</td>\r\n        <td>{{p.percentage}}</td>\r\n        <td>{{p.result}}</td>\r\n      </tr>\r\n    </tbody>\r\n  </table>\r\n  </div>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-showresult',\r\n  templateUrl: './showresult.component.html',\r\n  styleUrls: ['./showresult.component.css']\r\n})\r\nexport class ShowresultComponent implements OnInit {\r\n\r\n  constructor(private route:ActivatedRoute) { }\r\n  score;\r\n  percentage;\r\n  result;\r\n  res;\r\n  ngOnInit() {\r\n  \r\n    this.route.queryParamMap.subscribe((data) => { this.score= JSON.parse(data.get('scor')), this.percentage = JSON.parse(data.get('per')), this.result = JSON.parse(data.get('resl')) });\r\n    if(this.result == 0){\r\n      this.res= \"fail\";\r\n    }\r\n    else{\r\n      this.res= \"pass\";\r\n    }\r\n    console.log(this.score);\r\n    console.log(this.percentage);\r\n    console.log(this.result);\r\n    console.log(this.res);\r\n// please remove the console logs when required\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n  <div class=\"col-md-2\"></div>\r\n  <div class=\"col-md-8\">\r\n    <table class=\"table table-striped\">\r\n      <thead>\r\n        <tr>\r\n          <th scope=\"col\">#</th>\r\n          <th scope=\"col\">Score</th>\r\n          <th scope=\"col\">Precentage</th>\r\n          <th scope=\"col\">Result</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr>\r\n          <th scope=\"row\">1</th>\r\n          <td>{{score}}</td>\r\n          <td>{{percentage}}</td>\r\n          <td>{{res}}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n  <div class=\"col-md-2\"></div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { studentdetails } from '../model/form.model';\r\nimport { Router } from '@angular/router';\r\nimport { DataService } from '../data.service';\r\n\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.css']\r\n})\r\nexport class SignupComponent implements OnInit {\r\n\r\n  userprofilepic: any;\r\n  userprofilename: any;\r\n\r\n  //stu is the object storing all the information of student\r\n  stu = new studentdetails();\r\n\r\n  //property router of type Router to use the navigate function in order to navigate to other component\r\n  constructor(private router: Router, private ds: DataService) { }\r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n\r\n  //Definition of function that is called on the click of the button 'create a new account'\r\n  register()\r\n  {\r\n    //Post data to the server\r\n    this.ds.stu_register(this.stu).subscribe((data) => {\r\n      console.log(\"Hello \");\r\n      console.log(data);\r\n      if((data.status == \"ok\") && (this.stu.role == \"student\"))\r\n      {\r\n        console.log(\"Thankyou for your registration. Student registered successfully !!!\");\r\n        this.router.navigate(['dashboard'], {queryParams: { stuinfo_signup: JSON.stringify(this.stu) }});  \r\n      }\r\n\r\n      else if((data.status == \"ok\") && (this.stu.role == \"admin\"))\r\n      {\r\n        console.log(\"Thankyou for your registration. Admin registered successfully !!!\");\r\n        this.router.navigate(['dashboardadmin'], { queryParams : { stuinfo_signup: JSON.stringify(this.stu)}});\r\n      }\r\n\r\n      else if(data.status == \"not ok\")\r\n      {\r\n        alert(\"Registration Failed. Try again later or contact your admin !!!\");\r\n      }\r\n    })\r\n\r\n\r\n\r\n      // navigate to the dashboard component and send the complete details through queryParams \r\n\r\n      //conversion of JSON to string is required because subscribe function on other component expects a string to be received\r\n      this.router.navigate(['dashboard'], {queryParams: { stuinfo_signup: JSON.stringify(this.stu) }});\r\n  }\r\n\r\n}\r\n","<div class=\"div-outer\">\r\n<div class=\"div-form\">\r\n  <form action=\"\" method=\"POST\" style=\"border: 1px solid black; border-radius: 20px;\" #newstudent = \"ngForm\">\r\n      <div style=\"height: auto; width: 40%; text-align: center; margin-left: 30%;\"><h2>Signup Here</h2></div>\r\n      \r\n      <label>First Name: </label><br>\r\n      <input type=\"text\" placeholder=\"First name\" class=\"inp\" name=\"fname\" [(ngModel)] = \"stu.fname\" required/><br><br>\r\n\r\n      <label>Last Name: </label><br>\r\n      <input type=\"text\" placeholder=\"Last name (optional)\" class=\"inp\" name=\"lname\" [(ngModel)] = \"stu.lname\" /><br><br>\r\n\r\n      <label>Role: </label><br>\r\n      <select class=\"role\" name=\"role\" [(ngModel)] = \"stu.role\" required>\r\n        <option value=\"admin\">Admin</option> \r\n        <option value=\"student\">Student</option>\r\n      </select><br><br>\r\n\r\n      <label>Mobile Number: </label><br>\r\n      <select class=\"sel\" name=\"code\" [(ngModel)] = \"stu.code\" required>\r\n          <option value=\"91\">+91</option>\r\n          <option value=\"45\">+45</option>\r\n          <option value=\"31\">+31</option>\r\n          <option value=\"25\">+25</option>\r\n      </select>\r\n\r\n      <input type=\"number\" placeholder=\"Enter your number\" class=\"num\" name=\"mobile\" [(ngModel)] = \"stu.mobile\" required /><br><br>\r\n\r\n      <label>Date of Birth: </label><br>\r\n      <input type=\"date\" placeholder=\"DOB\" class=\"inp\" name=\"dob\" [(ngModel)] = \"stu.dob\" required /><br><br>\r\n\r\n      <label>Email: </label><br>\r\n      <input type=\"email\" placeholder=\"enter your email\" class=\"inp\" name=\"email\" [(ngModel)] = \"stu.email\" required /><br><br>\r\n\r\n      <label>Password: </label><br>\r\n      <input type=\"password\" placeholder=\"Enter your password\" class=\"inp\" name=\"pw\" [(ngModel)] = \"stu.pw\" required /><br><br>\r\n\r\n      <label>Confirm password: </label><br>\r\n      <input type=\"text\" placeholder=\"Enter your password again\" class=\"inp\" name=\"cpw\" [(ngModel)] = \"stu.cpw\" required><br><br>\r\n\r\n      <input type=\"radio\" class=\"radio\" name=\"gender\" value=\"male\" [(ngModel)] = \"stu.gender\" ><p>Male</p>\r\n      <input type=\"radio\" class=\"radio\" name=\"gender\" value=\"female\" [(ngModel)] = \"stu.gender\"><p>Female</p> <br><br>\r\n\r\n      <button type=\"Submit\" class=\"btn\" (click) = \"register()\"><span class=\"done\">Create a New Account</span></button><br><br>\r\n      <span style=\"margin-left: 30%;\" class=\"login\">Alredy have an Account? <a routerLink=\"home\">Login</a></span>\r\n  </form>\r\n</div>\r\n</div>\r\n","import { Component, OnInit, AbstractType } from '@angular/core';\r\nimport { ActivatedRoute, Route, Router } from '@angular/router';\r\nimport { DataService } from '../data.service';\r\n\r\n@Component({\r\n  selector: 'app-submitexam',\r\n  templateUrl: './submitexam.component.html',\r\n  styleUrls: ['./submitexam.component.css']\r\n})\r\nexport class SubmitexamComponent implements OnInit {\r\n\r\n  Result;  //Variable to receive result array\r\n  sc;\r\n  page;\r\n  re;\r\n  question: any;\r\n  submitted_obj; \r\n  \r\n  constructor(private route: ActivatedRoute, private ds: DataService,private router: Router) { }\r\n\r\n  ngOnInit() {\r\n      this.route.queryParamMap.subscribe((data) => { this.Result = JSON.parse(data.get('res')), this.question = JSON.parse(data.get('ques')) });\r\n      //console.log(this.Result.resultarray.length);\r\n      //console.log(this.question.coursename);\r\n      console.log(this.Result);\r\n\r\n      // creating object with submitted answer and question to send to DB\r\n      var obj = {\r\n        currentCourse: this.question.coursename,\r\n        questions: this.question.Questions,\r\n        }\r\n\r\n        for(var i = 0; i < this.Result.resultarray.length; i++)\r\n        {\r\n            if(this.Result.resultarray[i] == 1)\r\n            {\r\n                obj.questions[i].output = \"right answer\";\r\n            }\r\n            else if(this.Result.resultarray[i] == 0)\r\n            {\r\n                obj.questions[i].output = \"wrong answer\";\r\n            }\r\n        }\r\n\r\n        this.submitted_obj = obj\r\n  }\r\n\r\n  submitExam()\r\n  {\r\n\r\n\r\n      var reslt;\r\n      var x = this.Result.resultarray.length;\r\n      var count = 0, percentage, score;\r\n      \r\n      for(var i = 0; i < x; i++)\r\n      {\r\n          if(this.Result.resultarray[i] == 1)\r\n          {\r\n              count++;\r\n          }\r\n      }\r\n      score = count;\r\n      console.log(score);\r\n      percentage = (score/x)*100;\r\n      console.log(percentage);\r\n      if(percentage>=50){\r\n        reslt=1;\r\n      }\r\n      else{\r\n        reslt=0;\r\n\r\n      }\r\n      this.sc=score;\r\n      this.page=percentage;\r\n      \r\n      this.re=reslt;\r\n      var resl;\r\n      if(reslt==0){\r\n          resl='fail';\r\n      }\r\n      else{\r\n          resl='pass';\r\n      }\r\n\r\n      \r\n      var today = new Date();\r\n      var r = {email:localStorage.getItem('email'),score: this.sc, percent:this.page, res:resl, date:today};\r\n    \r\n      console.log(r);\r\n      this.ds.AddExamTaken(r).subscribe((data) => {\r\n        if(data.status == \"ok\")\r\n        {\r\n          console.log(\"exam taken Added Succesfully to the DataBase !\");\r\n        }\r\n        else\r\n        {\r\n          console.log(\"Exam taken Uploading Failed. Contact Your Admin.\");\r\n        }\r\n      })\r\n      this.router.navigate(['submit/showre'], { queryParams: {scor: this.sc, per:this.page, resl:this.re }});\r\n\r\n      //calling DS function to add result into DB\r\n      console.log(this.submitted_obj)\r\n\r\n      this.ds.submitresult(this.submitted_obj).subscribe((data) => {\r\n          if(data.status == \"ok\")\r\n          {\r\n              console.log(\"Result inserted successfully !\");\r\n          }\r\n          else if(data.status == \"not ok\")\r\n          {\r\n              console.log(\"Result Submission failed. Try again or contact your admin.\");\r\n          }\r\n      })\r\n      \r\n  }\r\n\r\n}\r\n","<!-- <button (click)=\"submitExam()\" >Submit</button> -->\r\n\r\n<div class=\"jumbotron jumbotron-fluid\">\r\n    <div class=\"container\">\r\n      <h1 class=\"display-4\">EXAM Has Ended !</h1>\r\n      <br>\r\n  \r\n       <p class=\"lead\">\r\n  \r\n          <p class=\"lead\">\r\n          Fingers Crossed &#x1f91e;\r\n      </p>\r\n      \r\n      <br>\r\n      <br>\r\n      <p class=\"lead\">\r\n          ”Success is the sum of small efforts, repeated day in and day out.” ~ Robert Collier\r\n      </p>\r\n  \r\n    </div>\r\n  </div>\r\n \r\n      <div class=\"container\">\r\n          <div class=\"row\">\r\n              <div class=\"col-md-4 col-sm-4\"></div>\r\n\r\n  \r\n      <div class=\"col-md-4 col-sm-4\">\t\t\r\n      <div>\r\n    <a class=\"btn btn-success btn-lg btn-block\" (click)=\"submitExam()\"  role=\"button\">View RESULT</a>\r\n    <br>\r\n  </div>\r\n  \r\n  <div class=\"col-md-4 col-sm-4\"></div>\r\n  \r\n  <div class=\"col-md-4 col-sm-4\"></div>\r\n  </div>\r\n  </div>\r\n<div class=\"container\">\r\n  <router-outlet></router-outlet>\r\n</div>\r\n\r\n ","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}